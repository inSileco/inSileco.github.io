## Who can write a blogpost?

Members of the `inSileco` team. However there is a extra step: it is quite simple,
members need to fill in a separate `yaml` file per author in the `data/authors/`
of this repository. The easiest way to proceed is to copy/paste one existing
file of this kind and to replace the information. For the sake of clarity, below
is what the `data/authors/kevin.yaml` looks like:

```yaml
given_name: Kevin
family_name: Cazelles
description: "Post-doctoral fellow"
project: "What am I doing"
github: KevCaz
twitter: KCazelles
researchgate: Kevin_Cazelles
website: yourwebsite
orcid: 0000-0001-6619-9874
impactstory: 0000-0001-6619-9874
publons: publons_id
gscholar: https://scholar.google.co.uk/citations?user=xzvcu7cAAAAJ&hl=fr
```

Note that avatars are retrieved from Github accounts. Also names of these files
can be used as a shortcut to add author's info on posts.


## How to use Github to publish a post?

All the changes must be added in the `dev` branch which is the default one.
The master branch is where the public version of the website is stored. The
deployment of the website from the `dev` branch to the `master` branch
is handled by Travis, see `.travis.yml` and the travis settings for more information.

For substantial changes in the features of the website we strongly encourage to
create a new branch and create a pull request to add feature. Depending on your
skills you may benefit from a review. Creating a new branch is also encouraged
for new upcoming posts


## Writing a new post

A new post is either a `md` or a `rmd` file added in the `content/post` folder.
There are no limitation in terms of number of character per post, we should
however be aware that readers rarely (if ever) spend hours reading the same post.
Regarding the topic of the post, it should deal with computational ecology at large.
Meaning that it may deal with ecology, your experience as an ecologist, computational
tools and in the best case scenario computational ecology.

The author of the must take advantage of the `yaml` front matter to edit the
meta-data associated with his post. Below, is a description of the different
fields to be used.

- **title**: title of the blog post;
- **author**: who wrote the post (may be a list of co-authors);
- **reviewer**: reviewer(s) of the post;
- **date**: when the post was written (YYYY-MM-DD fornat);
- **tags**: keywords used to index posts;
- **estime**: estimated time to read the post;
- **tweet**: text associated with the tweet button;
- **draft**: if `true` the post will not be made `public`, *i.e.* not available on the online version of the website; the post will however be rendered locally;
- **output**: rmarkdown options;
- **layout**: which layout must be used; note the default layout is the one required for
posts. 

Given the kind of posts found of the blog (that could be tricky), the estimated
time to read the post (`estime`) should better be estimated roughly by ourselves.
300 words read per minute for a post not too trick and less for other. Also the
author(s) of the post should take the time to read the code, figures, etc. Finally
the authors should do his best ti select the `tags` so the reader easily access
posts with similar content.


## Naming files

to be added

## Media files format

to be added

## Issues

Opening new issues is a very useful way to start a discussion about bugs (obviously) but also to discuss new features, new posts, new series of post. We strongly encourage the authors that come up with a new idea to open a new issue so we can discuss it. Once the issue is solved, it should be closed (obviously) and if the issue is address via a new commit then we encourage to [close it via commit message](https://help.github.com/articles/closing-issues-using-keywords/).
