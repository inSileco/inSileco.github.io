## Who can write a blogpost?

All members of the `inSileco` team. However an extra step is required: a member
must first fill out a separate `yaml` file in the `data/authors/` folder
to provide some details about himself/herself. The easiest way to proceed is to
copy/paste one existing file of this kind (see below) and to replace the information.
For the sake of clarity, below is what the `data/authors/kevin.yaml` looks like:

```yaml
given_name: Kevin
family_name: Cazelles
description: "Post-doctoral fellow"
project: "What am I doing"
github: KevCaz
twitter: KCazelles
researchgate: Kevin_Cazelles
website: yourwebsite
orcid: 0000-0001-6619-9874
impactstory: 0000-0001-6619-9874
publons: publons_id
gscholar: https://scholar.google.co.uk/citations?user=xzvcu7cAAAAJ&hl=fr
```

Note that avatars are retrieved from Github accounts. Also, names of these files
can be used as a shortcut to add author's info on posts, so keep them short and
simple.


## How to use Github to publish a post?

The default branch is the `dev` branch, the master branch is where the public
version of the website is stored. The deployment of the website from the `dev`
branch to the `master` branch is handled by Travis (see `.travis.yml` and the
travis settings for more information).

For substantial changes in the features of the website we strongly encourage to
create a new branch and create a pull request to add the desired features.
Depending on your skills you may benefit from a review. Creating a new branch
is also encouraged for new posts.


## Writing a new post

### Subject matter

The blog is geared towards computational ecology at large. This means that it
can be directly related to computational ecology, but does not have to be
explicitly expanding on the subject. For example, it may also deal with ecology,
your experience as an ecologist and computational tools. It may include
code, but it may also be an opinion piece or even a short concise literature
review on a specific subject you may wish to expand on.

### How to create and add a new post

A new post is either a `md` or a `rmd` file added in the `content/post` folder.
There are no limitation in terms of number of character per post. We should
however be aware that readers rarely (if ever) spend hours reading the same post.
The table of content is generated using `tocify` and only records title of
level 2 and 3. Level 1 should be used **only** for the title of the posts.

The author of the post must take advantage of the `yaml` front matter to edit the
meta-data associated with his post. Below is a description of the different
fields to be used.

- **author**: who wrote the post (may be a list of co-authors);
- **date**: when the post was written (YYYY-MM-DD format);
- **draft**: if `true` the post will not be made `public`, *i.e.* not available on the online version of the website; the post will however be rendered locally;
- **edits**: a list of maps of two elements: *date* and *comment* that are used to describe edits on the post;
- **estime**: estimated time to read the post;
- **layout**: which layout must be used; note the default layout is the one required for
posts;
- **output**: rmarkdown options;
- **reviewer**: reviewer(s) of the post;
- **tags**: keywords used to index posts;
- **title**: title of the blog post;
- **tweet**: text associated with the tweet button.

Given the kind of posts found of the blog (that could be tricky), the estimated
time to read the post (`estime`) should better be estimated roughly by ourselves.
300 words read per minute for a post that is reasonably tricky and less for
other. Also, the author(s) of the post should take the time to read the code,
figures, etc. Finally, the author should do his best to select the `tags` so the
reader easily access posts with similar content.


### Writing guidelines

To be added:

- how to quote (what format)
- what should be bold or emphasized
- adding url / notes


## Writing a new wiki article

to be added

## Naming files

So far, it should reflect the content of the post and its length should be less than 255 characters.

## Media files format

to be added

## Issues

Opening new issues is a very useful way to start a discussion about bugs (obviously) but also to discuss new features, new posts, new series of post. We strongly encourage the authors that come up with a new idea to open a new issue so we can discuss it. Once the issue is solved, it should be closed (obviously) and if the issue is address via a new commit then we encourage to [close it via commit message](https://help.github.com/articles/closing-issues-using-keywords/).
