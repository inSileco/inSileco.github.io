<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Our posts on R-bloggers on inSileco</title>
    <link>https://insileco.github.io/r-bloggers/index.xml</link>
    <description>Recent content in Our posts on R-bloggers on inSileco</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2017-2022 inSileco</copyright>
    <atom:link href="https://insileco.github.io/r-bloggers/index.xml" rel="self" type="application/rss+xml" />
    
		
    
		
    
		
    <item>
      <title>Continuous integration for R projects: from Travis CI to GitHub actions step by step</title>
      <link>https://insileco.github.io/2020/11/24/continuous-integration-for-r-projects-from-travis-ci-to-github-actions-step-by-step/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://insileco.github.io/2020/11/24/continuous-integration-for-r-projects-from-travis-ci-to-github-actions-step-by-step/</guid>
      <description>


<p>I have been using Travis CI (<a href="https://travis-ci.org/" class="uri">https://travis-ci.org/</a>) since 2015 and GitHub
Actions (hereafter GH Actions; <a href="https://github.com/features/actions" class="uri">https://github.com/features/actions</a>) for over a
year now<a href="#fn1" class="footnote-ref" id="fnref1"><sup>1</sup></a>. While using these two hosted continuous integration services,
I came to realize that I was spending less time troubleshooting with GH Actions
than I was with Travis. For this reason, I am now setting GH Actions workflows
for my new projects (mainly R and Julia projects) and slowly migrating older
projects from Travis to GH Actions. Turns out that was the right move! Indeed,
as Jeroen Ooms explains in his recent post <a href="https://discuss.ropensci.org/t/ropensci-moving-away-from-travis-ci/2267">“Moving away from Travis
CI”</a>,
by next year, <a href="https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing">Travis will no longer be free for open source
projects</a> (see
<a href="https://www.theregister.com/2020/11/02/travis_ci_pricng/">also</a>), which gives
me a good reason to speed up the migration process! As I was working on such
migration recently, I felt that I should to share some notes about this!</p>
<div id="insilecomisc-as-an-example" class="section level2">
<h2>inSilecoMisc as an example</h2>
<p>The package I worked on was
<a href="https://github.com/inSileco/inSilecoMisc"><code>inSilecoMisc</code></a>. Note that I have
already detailed elsewhere various features including in inSilecoMisc (e.g.
<a href="https://insileco.github.io/2020/04/14/insilecomisc-0.4.0-part-1/2/">here</a> and
<a href="https://insileco.github.io/2020/04/21/insilecomisc-0.4.0-part-2/2/">there</a>).
What matters here, is what was Travis CI doing for me. The screenshot below
shows the different jobs I set (described in
<a href="https://github.com/inSileco/inSilecoMisc/blob/38724e2e9710fb35d87fe1b69aaae8fe4e8cdeff/.travis.yml">.travis.yml</a>).</p>
<div class="figure">
<img src="on_travis.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the inSilecoMisc project page on <a href="https://travis-ci.org/">travis-ci.org</a>.</p>
</div>
<p>Travis was set to check <code>inSilecoMisc</code> on macOS and Linux (Ubuntu Bionic and Focal), for different versions of R (oldrel, rel and devel). The last job, checked the package on Ubuntu Focal, uploaded <a href="https://CRAN.R-project.org/package=covr"><code>covr</code></a> results to
<a href="https://codecov.io">CodeCov</a>, built <code>inSilecoMisc</code>’s website (via <a href="https://CRAN.R-project.org/package=pkgdown"><code>pkgdown</code></a>) and deploy to a <a href="https://pages.github.com/">GitHub Pages</a>. So my goal was to set up a workflow with GitHub Actions that would do the same jobs.</p>
</div>
<div id="ciao-travis" class="section level2">
<h2>Ciao Travis!</h2>
<p>The first step was to stop using Travis CI. To do so, I first needed to go on
<a href="https://travis-ci.org" class="uri">https://travis-ci.org</a> and turn off the jobs described above, so I looked for <code>inSilecoMisc</code> in my list of projects and switched it off (see screenshot below).</p>
<div class="figure">
<img src="switch_off.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshots of <code>inSilecoMisc</code>’s status on <a href="https://travis-ci.org" class="uri">https://travis-ci.org</a> (left: on/before, right: off/after).</p>
</div>
<p>Then, as I was using a <a href="https://developer.github.com/v3/guides/managing-deploy-keys/">deploy
key</a> for the
website, I deleted it in the settings on GitHub repository (<i class="fa
fa-arrow-circle-down" aria-hidden="true"></i>). Last, on my local <i class="fa
fa-git" aria-hidden="true"></i> repository I removed <code>.travis.yaml</code> (e.g. <code>git rm .travis.yaml</code>). Note that I still have a version of this file as a
<a href="https://gist.github.com/KevCaz/622c92cc1f7b00e66f078418882ad407">gist</a>. Once
this was done, I committed my changes and pushed!</p>
<div class="figure">
<img src="ciao.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of <code>inSileco</code>’s home page (commit <a href="https://github.com/inSileco/inSilecoMisc/commit/500d5ef332a407e48037ce422a9a14e7c4634fe7"><code>500d5ef</code></a>).</p>
</div>
</div>
<div id="add-a-workflow" class="section level2">
<h2>Add a workflow</h2>
<p><a href="https://github.com/features/actions">GH Actions</a> are well-documented and my
goal here is not to explain how to set an entire workflow. Rather I would like
to focus on certain part of the workflow. That said, one should keep in mind
that thanks to <a href="https://www.docker.com/">Docker</a> images and the large diversity
of Actions available, GH Actions are powerful and extremely flexible. For R
users interested in using GH Actions to check their package, it is worth noting
that <a href="https://CRAN.R-project.org/package=usethis"><code>usethis</code></a> has several
functions to add such workflows:</p>
<pre class="r"><code>library(usethis)
use_github_action() 
# there are different level of completeness, see the documentation 
# and select the one you need! 
use_github_action_check_release()
use_github_action_check_standard()
use_github_action_check_full()</code></pre>
<p>The workflow I ended up using, <a href="https://github.com/inSileco/inSilecoMisc/blob/master/.github/workflows/R-CMD-check.yaml">R-CMD-check.yaml</a> (appended at the end of the post) is based on one of the template file available in <a href="https://CRAN.R-project.org/package=usethis"><code>usethis</code></a>
that I’ve simplified a bit (I use only 4 combinations OS / R versions) and extended to use the <a href="chttps://codecov.io/">CodeCov</a> and deploy the website.</p>
</div>
<div id="code-coverage" class="section level2">
<h2>Code coverage</h2>
<p>To use <a href="chttps://codecov.io/">CodeCov</a> with Actions, a token is required. So, I clicked on the <code>Settings</code> tab of the <code>inSilecoMisc</code> page and copied the upload token:</p>
<div class="figure">
<img src="codecov.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the CodeCov settings page of <code>inSilecoMisc</code>.</p>
</div>
<p>Then I created a new secret <code>CODECOV_TOKEN</code> on <code>inSileco</code>’s GitHub repository and I pasted the token.</p>
<div class="figure">
<img src="token_codecov.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the Secret tab of the setting of the GitHub <code>inSilecoMisc</code> repository.</p>
</div>
<p>I chose <code>CODECOV_TOKEN</code> because it’s pretty clear, but the name does not matter as long as the same variable name is used in <a href="https://github.com/inSileco/inSilecoMisc/blob/master/.github/workflows/R-CMD-check.yaml">R-CMD-check.yaml</a>. Below is the code bloc in the workflow that handles code coverage:</p>
<pre class="yaml"><code>- name: Test coverage
  if: matrix.config.os == &#39;macOS-latest&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
  run: |
    remotes::install_cran(&quot;covr&quot;)
    covr::codecov(token = &quot;${{secrets.CODECOV_TOKEN}}&quot;)
  shell: Rscript {0}</code></pre>
<p>Note that <code>${{secrets.CODECOV_TOKEN}}</code> returns the token value I set as a secret
above. Also, I used an <code>if:</code> filed to upload the results of the code coverage
only once. I chose to do it on MacOS (for no specific reason) and I kept the
part <code>matrix.config.r == 'release'</code> in case I would add another configuration
(currently, this is useless).</p>
</div>
<div id="website" class="section level2">
<h2>Website</h2>
<div id="build" class="section level3">
<h3>Build</h3>
<p>In order to build the package I simply install <a href="https://CRAN.R-project.org/package=pkdown"><code>pkgdown</code></a> and use it to generates the HTML pages. Below is the code bloc I wrote for this:</p>
<pre class="yaml"><code>- name: Build website 
  if: matrix.config.os == &#39;ubuntu-20.04&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
  run: |
    mkdir docs
    sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
    git fetch origin gh-pages:gh-pages
    git --work-tree=docs checkout gh-pages -- .
    Rscript -e &#39;remotes::install_cran(c(&quot;pkgdown&quot;)); pkgdown::build_site()&#39;</code></pre>
<p>There are a few lines that require some explanations. First, I decided to build this on Ubuntu (again, this is arbitrary). Second, the following line:</p>
<pre class="sh"><code>sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev</code></pre>
<p>was required as dependencies were missing for
<a href="https://CRAN.R-project.org/package=curl"><code>curl</code></a> and
<a href="https://CRAN.R-project.org/package=textshaping"><code>textshaping</code></a>. Third, the two
last lines are two git operations that I used to retrieve te content of the
previous commit. I did so to be able to have both the “main” website at
<a href="https://insileco.github.io/inSilecoMisc/" class="uri">https://insileco.github.io/inSilecoMisc/</a> and “dev” version at
<a href="https://insileco.github.io/inSilecoMisc/dev" class="uri">https://insileco.github.io/inSilecoMisc/dev</a> (this is detailed in another post
<a href="https://kevcaz.github.io/notes/ci/deploypkgdown2/">“Deploy a pkgdown website on gh-pages
manually”</a>).</p>
</div>
<div id="deploy" class="section level3">
<h3>Deploy</h3>
<p>To deploy the website to <a href="https://pages.github.com/">GitHub Pages</a>, I used
<a href="https://github.com/peaceiris/actions-gh-pages"><code>peaceiris/actions-gh-pages</code></a>
(version 3). There are two
ways to deploy the website that are well explained in the README of
<a href="https://github.com/peaceiris/actions-gh-pages"><code>peaceiris/actions-gh-pages</code></a>.</p>
</div>
<div id="via-a-deploy-key" class="section level3">
<h3>via a deploy key</h3>
<p>For this, one needs to generate a <a href="https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key">pair of ssh
keys</a>.
On my Debian machine, I used the following command line in my terminal:</p>
<pre class="sh"><code>$ ssh-keygen -t rsa -b 4096 -C &quot;$(git config user.email)&quot; -f gh-pages</code></pre>
<p>Then I set the public key as a deploy key</p>
<div class="figure">
<img src="deploy_key.png" style="width:80.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the deploy key setting.</p>
</div>
<p>and the private one as a secret.</p>
<div class="figure">
<img src="private.png" style="width:80.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the secret <code>ACTIONS_DEPLOY_KEY</code>.</p>
</div>
<p>Again, I chose <code>ACTIONS_DEPLOY_KEY</code> for its clarity, but the name does not
matter as long as the correct variable name is used in
<a href="https://github.com/inSileco/inSilecoMisc/blob/master/.github/workflows/R-CMD-check.yaml">R-CMD-check.yaml</a>.</p>
<pre class="yaml"><code>- name: Deploy website 
  if: matrix.config.os == &#39;ubuntu-20.04&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
  uses: peaceiris/actions-gh-pages@v3
  with:
    deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
    publish_dir: ./docs</code></pre>
<p>I used <code>publish_dir: ./docs</code> as this is where <a href="https://CRAN.R-project.org/package=pkgdown"><code>pkgdown</code> stores</a> stored the web pages in my case
(see the file
<a href="https://github.com/inSileco/inSilecoMisc/blob/master/_pkgdown.yml">_pkgdown.yml</a>).
Note that I didn’t need to specify the branch to be used for the website as
the default is <code>gh-pages</code> and I already had a branch <code>gh-pages</code> set up<a href="#fn2" class="footnote-ref" id="fnref2"><sup>2</sup></a>.</p>
</div>
<div id="via-a-personal-access-token" class="section level3">
<h3>via a personal access token</h3>
<p>The second option is to <a href="https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token">create and use a personal access token</a> (this is the solution I opted for in the end).</p>
<div class="figure">
<img src="perso_token.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the page to generate the personal token.</p>
</div>
<p>And then set this token as a secret for the repository.</p>
<div class="figure">
<img src="pat_secret.png" style="width:90.0%" alt="&gt;&lt;" />
<p class="caption"><i class="fa fa-info" aria-hidden="true"></i> Screenshot of the secret <code>PERSO_TOKEN</code>.</p>
</div>
<p>Once the secret is set, the variable name should be passed as <code>github_token</code> (instead of <code>deploy_key</code>), like so:</p>
<pre class="yaml"><code>- name: Deploy website 
  if: matrix.config.os == &#39;ubuntu-20.04&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.PERSO_TOKEN }}
    publish_dir: ./docs</code></pre>
<p>Incidentally, <a href="https://github.blog/changelog/2020-05-14-organization-secrets/">organization secrets</a> allow user to have secrets at the organisation level, so that the same token can be used for several repositories!</p>
<p><br/></p>
<p>Everything is working fine now 🎆, check out <a href="https://github.com/inSileco/inSilecoMisc"><code>inSilecoMisc</code></a>! Below is the entire workflow</p>
</div>
</div>
<div id="entire-workflow" class="section level2">
<h2>Entire workflow</h2>
<p>Below is the whole <a href="https://github.com/inSileco/inSilecoMisc/blob/master/.github/workflows/R-CMD-check.yaml">R-CMD-check.yaml</a> file I ended using (note that for recent projects <a href="https://github.blog/changelog/2020-08-26-set-the-default-branch-for-newly-created-repositories/">the default branch name is <code>main</code> instead of <code>master</code></a>).</p>
<pre class="yaml"><code>on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: &#39;release&#39;}
          - {os: macOS-latest, r: &#39;release&#39;}
          - {os: ubuntu-20.04, r: &#39;release&#39;, rspm: &quot;https://packagemanager.rstudio.com/cran/__linux__/focal/latest&quot;}
          - {os: ubuntu-20.04, r: &#39;devel&#39;, rspm: &quot;https://packagemanager.rstudio.com/cran/__linux__/focal/latest&quot;}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages(&#39;remotes&#39;)
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), &quot;depends.Rds&quot;, version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != &#39;Windows&#39;
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles(&#39;depends.Rds&#39;) }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == &#39;Linux&#39;
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e &quot;remotes::install_github(&#39;r-hub/sysreqs&#39;)&quot;
          sysreqs=$(Rscript -e &quot;cat(sysreqs::sysreq_commands(&#39;DESCRIPTION&#39;))&quot;)
          sudo -s eval &quot;$sysreqs&quot;
      - name: Install dependencies
        run: |
          library(remotes)
          deps &lt;- readRDS(&quot;depends.Rds&quot;)
          deps[[&quot;installed&quot;]] &lt;- vapply(deps[[&quot;package&quot;]], remotes:::local_sha, character(1))
          update(deps)
          remotes::install_cran(&quot;rcmdcheck&quot;)
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = &quot;--no-manual&quot;, error_on = &quot;warning&quot;, check_dir = &quot;check&quot;)
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == &#39;macOS-latest&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
        run: |
          remotes::install_cran(&quot;covr&quot;)
          covr::codecov(token = &quot;${{secrets.CODECOV_TOKEN}}&quot;)
        shell: Rscript {0}
    
      - name: Build website 
        if: matrix.config.os == &#39;ubuntu-20.04&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
        run: |
          sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
          mkdir docs
          git fetch origin gh-pages:gh-pages
          git --work-tree=docs checkout gh-pages -- .
          Rscript -e &#39;remotes::install_cran(c(&quot;pkgdown&quot;)); pkgdown::build_site()&#39;
            
      - name: Deploy website 
        if: matrix.config.os == &#39;ubuntu-20.04&#39; &amp;&amp; matrix.config.r == &#39;release&#39;
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSO_TOKEN }}
          publish_dir: ./docs</code></pre>
<p>Hope this could be of help 😄!</p>
<p><br/></p>
</div>
<div class="footnotes footnotes-end-of-document">
<hr />
<ol>
<li id="fn1"><p>see <a href="https://kevcaz.github.io/notes/ci/githubactions/">my first post about GitHub Actions</a> on my personal blog.<a href="#fnref1" class="footnote-back">↩︎</a></p></li>
<li id="fn2"><p>Use <code>publish_branch: your-branch</code> to set <code>your-branch</code> as the branch were files will be published.<a href="#fnref2" class="footnote-back">↩︎</a></p></li>
</ol>
</div>
</description>
    </item>
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    <item>
      <title>Custom tick marks with R&#39;s base graphics system</title>
      <link>https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/</guid>
      <description><h2 id="context">Context</h2>
<p>If you are using R&rsquo;s base graphics system for your plots and if you like
customizing your plots, you may have already wondered how to custom the tick
marks of your plots! I do that quite a lot and I thought it would be worth
explaining how I do so. Let&rsquo;s consider the following plot,</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">cx</span> <span class="o">&lt;-</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">0.1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">cy</span> <span class="o">&lt;-</span> <span class="n">cx</span> <span class="o">+</span> <span class="m">.5</span><span class="o">*</span><span class="nf">rnorm</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">cx</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/prob-1.png" width="672" style="display: block; margin: auto;" />
<p>By default, <code>plot.default</code> internally has its way to decide where tick marks
should be added. It is always a good default choice, but sometimes not the one
you&rsquo;re looking for. Fortunately, the core package <code>graphics</code> includes all what
you need to custom the tick marks and so, without further ado, let&rsquo;s custom our
ticks!</p>
<h2 id="remove-axes-and-add-them-back">Remove axes and add them back</h2>
<p>The first step is to remove all axes. There are basically two ways. One option
is to use <code>xaxt = &quot;n&quot;</code> and <code>yaxt = &quot;n&quot;</code> to selectively remove the x-axis and
the y-axis, respectively.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-1-1.png" width="672" style="display: block; margin: auto;" />
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">,</span> <span class="n">yaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-2-1.png" width="672" style="display: block; margin: auto;" />
<p>The second option is to set <code>axes</code> to <code>FALSE</code> in <code>plot()</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-3-1.png" width="672" style="display: block; margin: auto;" />
<p>As you can see, when <code>axes = FALSE</code> the box is also removed and you can actually add it back with <code>box()</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-4-1.png" width="672" style="display: block; margin: auto;" />
<p>and change its style, if desired:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">(</span><span class="n">bty</span> <span class="o">=</span> <span class="s">&#34;l&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-5-1.png" width="672" style="display: block; margin: auto;" />
<p>That being said, let&rsquo;s only remove the x-axis for the moment and add ticks at 0,
0.5, 1, 1.5 and 2 to the x-axis using <code>axis()</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-6-1.png" width="672" style="display: block; margin: auto;" />
<p>I can easily change the labels if values on the axis are not the ones that
should be displayed, e.g.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">letters</span><span class="n">[1</span><span class="o">:</span><span class="m">5</span><span class="n">]</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-7-1.png" width="672" style="display: block; margin: auto;" />
<h2 id="second-set-of-tick-marks">Second set of tick marks</h2>
<p>Now, let&rsquo;s add a second set tick marks! This can be done by calling <code>axis()</code> one
more time.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-8-1.png" width="672" style="display: block; margin: auto;" />
<p>As you may have noticed, I use <code>setdiff()</code> to select the complementary set of
ticks. I think it is an efficient of proceeding: I first select the finest gap
between two ticks (here 0.1) and create the sequence with <code>seq()</code>, then create
the main set of tick marks and finally use <code>setdiff()</code> will to add the
remaining tick marks. Also here, as I don&rsquo;t want to add extra labels, I just set
the labels to <code>NA</code>.</p>
<h2 id="remove-the-extra-line">Remove the extra line</h2>
<p>The main reason why I adjust the tick marks on my plots is because <code>axis()</code> and
<code>box()</code> add lines that partially overlap (this is also true when you use the
default behavior of <code>plot()</code>): the lines that comes along with the ticks</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-9-1.png" width="672" style="display: block; margin: auto;" />
<p>overlap with the box</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-10-1.png" width="672" style="display: block; margin: auto;" />
<p>This may frequently goes unnoticed, but I personally tend to notice such overlap
this and it annoys me&hellip; Anyway, one way to handle this is to set the line width
to 0 in <code>axis()</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-11-1.png" width="672" style="display: block; margin: auto;" />
<p>and then to set the line with of the ticks, controlled by <code>lwd.ticks</code>, to
something greater than 0</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-12-1.png" width="672" style="display: block; margin: auto;" />
<p>Note that if you only wish to remove the marks you can use <code>tick = FALSE</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">tick</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">tick</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-13-1.png" width="672" style="display: block; margin: auto;" />
<p>But if you just want to get rid of the extra line, but not the ticks, then you
need set <code>lwd</code> to 0 and <code>lwd.ticks</code> to a positive values.</p>
<h2 id="custom-the-ticks">Custom the ticks</h2>
<p>Having done the steps above, you may have realized that fine-tuning <code>lwd.ticks</code>
is a good way to custom your tick marks!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1.5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">.5</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-14-1.png" width="672" style="display: block; margin: auto;" />
<p>A second parameter to further customize the tick marks is <code>tck</code> that actually
belongs to <code>par()</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">par</span><span class="p">(</span><span class="n">tck</span> <span class="o">=</span> <span class="m">-0.07</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/tckinpar-1.png" width="672" style="display: block; margin: auto;" />
<p>but can also be used with <code>axis()</code> thanks to the ellipsis (<code>...</code>) which allow me
to change it only for one set of ticks</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">-0.07</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/tckinaxis-1.png" width="672" style="display: block; margin: auto;" />
<p>Moreover, using positive value you can make the tick go up!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">0.07</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-15-1.png" width="672" style="display: block; margin: auto;" />
<p>And finally you change many aspect of them, including color then and line type:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1.5</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">-.07</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="m">2</span><span class="p">,</span> <span class="n">lty</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">.5</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">-.03</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="m">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/unnamed-chunk-16-1.png" width="672" style="display: block; margin: auto;" />
<p>One more tip, if you need to adjust the position of the tick you would have to
use <code>mgp</code> (also documented in <code>par</code>) which is a vector of three elements
controlling the following features:</p>
<ol>
<li>the position of the axis labels,</li>
<li>the position of the tick labels,</li>
<li>the positon on the tick marks.</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">par</span><span class="p">(</span><span class="n">mgp</span> <span class="o">=</span> <span class="nf">c</span><span class="p">(</span><span class="m">2.5</span><span class="p">,</span> <span class="m">1.6</span><span class="p">,</span> <span class="m">0</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1.5</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">tck</span> <span class="o">=</span> <span class="m">-.1</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="m">2</span><span class="p">,</span> <span class="n">lty</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">.5</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">-.03</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="m">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/mgp-1.png" width="672" style="display: block; margin: auto;" />
<p>Note that, just as for <code>tck</code>, I can use <code>mgp</code> in <code>axis()</code>. In this example,  it
won&rsquo;t affected the axis labels because they were added by <code>plot()</code>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1.5</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">tck</span> <span class="o">=</span> <span class="m">-.1</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="m">2</span><span class="p">,</span> <span class="n">lty</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">axis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">)),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">.5</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">-.03</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="m">3</span><span class="p">,</span> <span class="n">mgp</span> <span class="o">=</span> <span class="nf">c</span><span class="p">(</span><span class="m">2.5</span><span class="p">,</span> <span class="m">1.6</span><span class="p">,</span> <span class="m">0</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nf">box</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/mgpinaxis-1.png" width="672" style="display: block; margin: auto;" />
<h2 id="wrap-all-that-up-in-a-function">Wrap all that up in a function</h2>
<p>All the steps above may appear overwhelming at first because you need to
memorize where is what&hellip; But once everything gets clear, you would realize that
for most of your plots you need to tweak the same parameters and so that you can
create your own function that would cover your needs. For instance, I often use
a function similar to the one below:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">myaxis</span> <span class="o">&lt;-</span> <span class="nf">function</span><span class="p">(</span><span class="n">side</span><span class="p">,</span> <span class="n">all</span><span class="p">,</span> <span class="n">main</span><span class="p">,</span> <span class="n">lab</span> <span class="o">=</span> <span class="n">main</span><span class="p">,</span> <span class="n">col1</span> <span class="o">=</span> <span class="m">1</span><span class="p">,</span> <span class="n">col2</span> <span class="o">=</span> <span class="m">1</span><span class="p">,</span> <span class="kc">...</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">axis</span><span class="p">(</span><span class="n">side</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="n">main</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">lab</span><span class="p">,</span> <span class="n">lwd</span> <span class="o">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">1</span><span class="p">,</span> <span class="n">col</span> <span class="o">=</span> <span class="n">col1</span><span class="p">,</span> <span class="kc">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="nf">axis</span><span class="p">(</span><span class="n">side</span><span class="p">,</span> <span class="n">at</span> <span class="o">=</span> <span class="nf">setdiff</span><span class="p">(</span><span class="n">all</span><span class="p">,</span> <span class="n">main</span><span class="p">),</span> <span class="n">labels</span> <span class="o">=</span> <span class="kc">NA</span><span class="p">,</span> <span class="n">lwd.ticks</span> <span class="o">=</span> <span class="m">.75</span><span class="p">,</span> <span class="n">tck</span> <span class="o">=</span> <span class="m">-.025</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">col</span> <span class="o">=</span> <span class="n">col2</span><span class="p">,</span> <span class="kc">...</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>which basically makes the customization of tick marks very easy!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">plot</span><span class="p">(</span><span class="n">cx</span><span class="p">,</span> <span class="n">cy</span><span class="p">,</span> <span class="n">xaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">,</span> <span class="n">yaxt</span> <span class="o">=</span> <span class="s">&#34;n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">myaxis</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="n">cx</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">.5</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nf">myaxis</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="nf">seq</span><span class="p">(</span><span class="m">-0.5</span><span class="p">,</span> <span class="m">2.8</span><span class="p">,</span> <span class="m">.1</span><span class="p">),</span> <span class="nf">seq</span><span class="p">(</span><span class="m">-0.5</span><span class="p">,</span> <span class="m">2.5</span><span class="p">,</span> <span class="m">.5</span><span class="p">),</span> <span class="n">las</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/08/29/custom-tick-marks-with-rs-base-graphics-system/index_files/figure-html/final-1.png" width="672" style="display: block; margin: auto;" />
<br>
<h4 id="thats-all-folks-">That&rsquo;s all folks 😄!</h4>
<div style="padding: 2rem 0rem 2rem 0rem;">
<details>
<summary>Session info <i class="fa fa-cogs" aria-hidden="true"></i></summary>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">sessionInfo</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  R version 4.2.2 (2022-10-31)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Platform: x86_64-pc-linux-gnu (64-bit)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Running under: Ubuntu 20.04.5 LTS</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Matrix products: default</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  locale:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  attached base packages:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] stats     graphics  grDevices utils     datasets  methods   base     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  other attached packages:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] inSilecoRef_0.0.1.9000</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  loaded via a namespace (and not attached):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] tidyselect_1.2.0  xfun_0.34         bslib_0.4.1       vctrs_0.5.0      </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [5] generics_0.1.3    miniUI_0.1.1.1    htmltools_0.5.3   yaml_2.3.6       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [9] utf8_1.2.2        rlang_1.0.6       later_1.3.0       pillar_1.8.1     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [13] jquerylib_0.1.4   httpcode_0.3.0    glue_1.6.2        DBI_1.1.3        </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [17] lifecycle_1.0.3   plyr_1.8.7        stringr_1.4.1     blogdown_1.15    </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [21] htmlwidgets_1.5.4 evaluate_0.18     knitr_1.40        fastmap_1.1.0    </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [25] httpuv_1.6.6      curl_4.3.3        fansi_1.0.3       highr_0.9        </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [29] Rcpp_1.0.9        xtable_1.8-4      promises_1.2.0.1  backports_1.4.1  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [33] DT_0.26           cachem_1.0.6      jsonlite_1.8.3    rcrossref_1.1.0  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [37] mime_0.12         digest_0.6.30     stringi_1.7.8     bookdown_0.29    </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [41] dplyr_1.0.10      shiny_1.7.3       bibtex_0.5.0      cli_3.4.1        </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [45] tools_4.2.2       magrittr_2.0.3    sass_0.4.2        tibble_3.1.8     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [49] RefManageR_1.4.0  crul_1.3          pkgconfig_2.0.3   ellipsis_0.3.2   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [53] xml2_1.3.3        timechange_0.1.1  lubridate_1.9.0   assertthat_0.2.1 </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [57] rmarkdown_2.18    httr_1.4.4        R6_2.5.1          compiler_4.2.2</span>
</span></span></code></pre></td></tr></table>
</div>
</div></details>
</div>
</description>
    </item>
		
    
		
    
		
    
		
    
		
    
		
    
		
    <item>
      <title>inSilecoMisc 0.4.0 (part 2/2)</title>
      <link>https://insileco.github.io/2020/04/21/insilecomisc-0.4.0-part-2/2/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://insileco.github.io/2020/04/21/insilecomisc-0.4.0-part-2/2/</guid>
      <description><p>In the <a href="/2020/04/05/insilecomisc-0.4.0-part-1/2/">first part of this post</a> I
introduced several functions available in the package <a href="https://github.com/inSileco/inSilecoMisc"><code>inSilecoMisc</code></a>. In this post, I keep on introducing features of the package you
might find useful! If you did not read the first part of this post and are
interested in reproducing the examples below, simply install <code>inSilecoMisc</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># Run if package is not already installed</span>
</span></span><span class="line"><span class="cl"><span class="nf">install.packages</span><span class="p">(</span><span class="s">&#34;remotes&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">remotes</span><span class="o">::</span><span class="nf">install_github</span><span class="p">(</span><span class="s">&#34;inSileco/inSilecoMisc&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Load it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">library</span><span class="p">(</span><span class="s">&#34;inSilecoMisc&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">packageVersion</span><span class="p">(</span><span class="s">&#34;inSilecoMisc&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#39;0.7.0.9000&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>and you’re good to go!</p>
<h2 id="scalewithin">scaleWithin()</h2>
<p>I wrote <a href="https://insileco.github.io/inSilecoMisc/reference/scaleWithin.html"><code>scaleWithin()</code></a> to handle color scales for a specific yet frequent situation. Let us say that I have 40 percentage values – meaning 0 to 100 – in a vector <code>val</code>…</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">val</span> <span class="o">&lt;-</span> <span class="nf">runif</span><span class="p">(</span><span class="m">40</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">100</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">val</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1]  0.6572801  0.3368725 88.0699687 70.3776212 73.8595218 40.1987241</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [7] 71.8725136 98.9294085 88.5421568 25.3313828 80.9981881 10.8221661</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [13] 25.7551437 62.4548497 80.5312162 66.9596667  5.7084527  6.7909596</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [19]  2.2896509 66.2384023 43.1612158 19.7575658 97.8899666 18.0774212</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [25] 89.1466727 91.4667521  6.9856331 97.0638072  3.8016021 74.6112335</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [31] 27.1762666 80.0442226 86.5462217  0.4096298 48.9437571 64.2817274</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [37] 10.2523881 39.1197954 48.7246107 49.9212258</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>… <strong>and</strong> that I wish to create a color scale with 25 tones. I use <a href="http://insileco.github.io/graphicsutils/reference/showPalette.html"><code>showPalette()</code></a> to show the color palette:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">pal</span> <span class="o">&lt;-</span> <span class="nf">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s">&#34;#f9fa98&#34;</span><span class="p">,</span> <span class="s">&#34;#500127&#34;</span><span class="p">))(</span><span class="m">25</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">graphicsutils</span><span class="o">::</span><span class="nf">showPalette</span><span class="p">(</span><span class="n">pal</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/04/21/insilecomisc-0.4.0-part-2/2/index_files/figure-html/unnamed-chunk-3-1.png" width="672" style="display: block; margin: auto;" />
<p><strong>But</strong> the color scale should be used for the range [30%-70%], meaning that values below 30% should have the lowest values and values above 70%, the highest one. The caption should thus indicate <code>\(\geqslant\)</code> 30% and <code>\(\leqslant\)</code> 70%. Then the function <code>scaleWithin()</code> is very handy!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">scaleWithin</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">25</span><span class="p">,</span> <span class="n">mn</span> <span class="o">=</span> <span class="m">30</span><span class="p">,</span> <span class="n">mx</span> <span class="o">=</span> <span class="m">70</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1]  1  1 25 25 25  7 25 25 25  1 25  1  1 21 25 24  1  1  1 23  9  1 25  1 25</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [26] 25  1 25  1 25  1 25 25  1 12 22  1  6 12 13</span>
</span></span><span class="line"><span class="cl"><span class="n">graphicsutils</span><span class="o">::</span><span class="nf">showPalette</span><span class="p">(</span><span class="n">pal</span><span class="nf">[scaleWithin</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">25</span><span class="p">,</span> <span class="n">mn</span> <span class="o">=</span> <span class="m">30</span><span class="p">,</span> <span class="n">mx</span> <span class="o">=</span> <span class="m">70</span><span class="p">)</span><span class="n">]</span><span class="p">,</span> <span class="n">add_codecolor</span> <span class="o">=</span> <span class="kc">FALSE</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><img src="https://insileco.github.io/2020/04/21/insilecomisc-0.4.0-part-2/2/index_files/figure-html/unnamed-chunk-4-1.png" width="672" style="display: block; margin: auto;" />
<p>Even though this function is pretty useful – at least I think it is! – I had a
lot of trouble conveying why! So, in the last version of <code>inSilecoMisc</code>, I
re-wrote the entire documentation and I hope that, together with this example,
others will, as I so, find it useful.</p>
<h2 id="messages">Messages</h2>
<p>Daily, I <strong>use</strong> R packages and R functions to analyze data, create
model, run simulations, and a number of other things! So I write scripts that combine functions from
various packages to create pipelines that do the analyses I need. When running
such scripts, I like having information reported on a clear and visual way, that is why I value packages such as
<a href="https://CRAN.R-project.org/package=progress"><code>progress</code></a>, <a href="https://CRAN.R-project.org/package=crayon"><code>crayon</code></a> and <a href="https://CRAN.R-project.org/package=cli"><code>cli</code></a>. In
<code>inSilecoMisc</code>, inspired by messages reported by <a href="https://CRAN.R-project.org/package=devtools"><code>devtools</code></a> when
building a package, I created four simple message functions using <a href="https://CRAN.R-project.org/package=crayon"><code>crayon</code></a> and <a href="https://CRAN.R-project.org/package=cli"><code>cli</code></a> packages to standardize messages in my scripts.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># 1. msgInfo() indicates what the upcoming computation</span>
</span></span><span class="line"><span class="cl"><span class="nf">msgInfo</span><span class="p">(</span><span class="s">&#34;this is what&#39;s gonna happen next&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ℹ this is what&#39;s gonna happen next</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># 2. msgWarning() reminds me something important that should not affect the run</span>
</span></span><span class="line"><span class="cl"><span class="nf">msgWarning</span><span class="p">(</span><span class="s">&#34;Got to be careful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ⚠ Got to be careful</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># 3. msgError() when something went wrong (and I anticipated that it could happen)</span>
</span></span><span class="line"><span class="cl"><span class="nf">msgError</span><span class="p">(</span><span class="s">&#34;Something wrong&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ✖ Something wrong</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># 4. msgSuccess() when a step/ a computation has been successfully completed</span>
</span></span><span class="line"><span class="cl"><span class="nf">msgSuccess</span><span class="p">(</span><span class="s">&#34;All good&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ✔ All good</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>These functions help me structure my scripts. Here is a contrived example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">scr_min</span> <span class="o">&lt;-</span> <span class="nf">function</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1"># msgInfo() lets me know where I am in the script</span>
</span></span><span class="line"><span class="cl">  <span class="nf">msgInfo</span><span class="p">(</span><span class="s">&#34;Average random values&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="nf">set.seed</span><span class="p">(</span><span class="m">111</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="n">out</span> <span class="o">&lt;-</span> <span class="nf">mean</span><span class="p">(</span><span class="nf">runif</span><span class="p">(</span><span class="m">100</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">  <span class="nf">msgSuccess</span><span class="p">(</span><span class="s">&#34;Done!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="c1"># msgSuccess() indicates the successful completion of this part</span>
</span></span><span class="line"><span class="cl">  <span class="n">out</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nf">scr_min</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ℹ Average random values</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ✔ Done!</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] 0.4895239</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Another helpful aspect of these functions is that they all are based on <code>message()</code>. As such, if I want to execute a script quietly, all I need to do is to call <code>suppressMessages()</code> beforehand</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># quiet run</span>
</span></span><span class="line"><span class="cl"><span class="nf">suppressMessages</span><span class="p">(</span><span class="nf">scr_min</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] 0.4895239</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If you want to see an example of how I use these functions in a script for a scientific manuscript,
check out the research compendium
<a href="https://github.com/TheoreticalEcosystemEcology/coocNotInteract">coocNotInteract</a>.</p>
<h2 id="tbldown">tblDown()</h2>
<p>Last but not least, I’d like to introduce a function to quickly write table data
frame (or a list of data frames) in documents of various formats. I created
<a href="https://insileco.github.io/inSilecoMisc/reference/tblDownn.html"><code>tblDown()</code></a>
for a colleague of mine that was looking for a quick way to export a table. In
the package <a href="https://CRAN.R-project.org/package=knitr"><code>knitr</code></a>, there is the very handy function <code>kable()</code>
that quickly writes a data frame in various formats.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">knitr</span><span class="o">::</span><span class="nf">kable</span><span class="p">(</span><span class="nf">head</span><span class="p">(</span><span class="n">CO2</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><table>
<thead>
<tr>
<th style="text-align:left">Plant</th>
<th style="text-align:left">Type</th>
<th style="text-align:left">Treatment</th>
<th style="text-align:right">conc</th>
<th style="text-align:right">uptake</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Qn1</td>
<td style="text-align:left">Quebec</td>
<td style="text-align:left">nonchilled</td>
<td style="text-align:right">95</td>
<td style="text-align:right">16.0</td>
</tr>
<tr>
<td style="text-align:left">Qn1</td>
<td style="text-align:left">Quebec</td>
<td style="text-align:left">nonchilled</td>
<td style="text-align:right">175</td>
<td style="text-align:right">30.4</td>
</tr>
<tr>
<td style="text-align:left">Qn1</td>
<td style="text-align:left">Quebec</td>
<td style="text-align:left">nonchilled</td>
<td style="text-align:right">250</td>
<td style="text-align:right">34.8</td>
</tr>
<tr>
<td style="text-align:left">Qn1</td>
<td style="text-align:left">Quebec</td>
<td style="text-align:left">nonchilled</td>
<td style="text-align:right">350</td>
<td style="text-align:right">37.2</td>
</tr>
<tr>
<td style="text-align:left">Qn1</td>
<td style="text-align:left">Quebec</td>
<td style="text-align:left">nonchilled</td>
<td style="text-align:right">500</td>
<td style="text-align:right">35.3</td>
</tr>
<tr>
<td style="text-align:left">Qn1</td>
<td style="text-align:left">Quebec</td>
<td style="text-align:left">nonchilled</td>
<td style="text-align:right">675</td>
<td style="text-align:right">39.2</td>
</tr>
</tbody>
</table>
<p>I wrote a function that calls <code>kable()</code> to write the data frame
and then renders the table(s) in the
desired format indicated by the extension of the output file (<code>docx</code> by
default) using <a href="https://pandoc.org/">pandoc</a>.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="c1"># NB tblDown(head(CO2)) returns table.docx by default</span>
</span></span><span class="line"><span class="cl"><span class="nf">tblDown</span><span class="p">(</span><span class="nf">head</span><span class="p">(</span><span class="n">CO2</span><span class="p">),</span> <span class="n">output_file</span> <span class="o">=</span> <span class="s">&#34;table.odt&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><center>
  <figure>
    <img class="mg-bot" src="/2020/04/21/insilecomisc-0.4.0-part-2/2/table_odt.png" alt="table_odt.png (screenshot)" width="90%%" >
    <figcaption><span class="highlight">table_odt.png (screenshot)</span></figcaption>
  </figure>
</center>
<p>As I mentioned above <code>tblDown()</code> handles lists of data frames and the user can also provide a set of captions for every table and even separate them with section headers (of level 1).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">tblDown</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="nf">head</span><span class="p">(</span><span class="n">CO2</span><span class="p">),</span> <span class="nf">tail</span><span class="p">(</span><span class="n">CO2</span><span class="p">)),</span> <span class="n">output_file</span> <span class="o">=</span> <span class="s">&#34;tables.pdf&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="n">caption</span> <span class="o">=</span> <span class="nf">c</span><span class="p">(</span><span class="s">&#34;This is the head of CO2&#34;</span><span class="p">,</span> <span class="s">&#34;This is the tail of CO2&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">section</span> <span class="o">=</span> <span class="s">&#34;Table&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Check out the output file ➡️ <a href="tables.pdf"><i class="fa
fa-file-pdf-o"></i></a>! Note that in the example above I only use one
character string for <code>section</code> and <code>tblDown()</code> has appended an index; this is
also the default behavior for <code>caption</code>: if there are less captions
or sections titles than data frames, vectors of captions (and/or sections) are repeated and an index is appended.</p>
<p>If you are already writing your documents with <a href="https://rmarkdown.rstudio.com/">R
Markdown</a>, you may not need this. Yet keep in mind that
<code>tblDown()</code> quickly exports tables in various formats with only one line of
command!</p>
<h4 id="thats-all-folks-">That’s all folks 🎉!</h4>
<div style="padding: 2rem 0rem 2rem 0rem;">
<details>
<summary>
Session info <i class="fa fa-cogs" aria-hidden="true"></i>
</summary>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">sessionInfo</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  R version 4.2.2 (2022-10-31)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Platform: x86_64-pc-linux-gnu (64-bit)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Running under: Ubuntu 20.04.5 LTS</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Matrix products: default</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  locale:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  attached base packages:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] stats     graphics  grDevices utils     datasets  methods   base     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  other attached packages:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] inSilecoMisc_0.7.0.9000 inSilecoRef_0.0.1.9000 </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  loaded via a namespace (and not attached):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] tidyselect_1.2.0         xfun_0.34                bslib_0.4.1             </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [4] vctrs_0.5.0              generics_0.1.3           miniUI_0.1.1.1          </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [7] htmltools_0.5.3          yaml_2.3.6               utf8_1.2.2              </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [10] rlang_1.0.6              later_1.3.0              pillar_1.8.1            </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [13] jquerylib_0.1.4          httpcode_0.3.0           glue_1.6.2              </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [16] DBI_1.1.3                lifecycle_1.0.3          plyr_1.8.7              </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [19] stringr_1.4.1            blogdown_1.15            htmlwidgets_1.5.4       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [22] evaluate_0.18            knitr_1.40               fastmap_1.1.0           </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [25] httpuv_1.6.6             curl_4.3.3               fansi_1.0.3             </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [28] highr_0.9                Rcpp_1.0.9               xtable_1.8-4            </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [31] promises_1.2.0.1         backports_1.4.1          DT_0.26                 </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [34] cachem_1.0.6             jsonlite_1.8.3           rcrossref_1.1.0         </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [37] mime_0.12                digest_0.6.30            stringi_1.7.8           </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [40] bookdown_0.29            dplyr_1.0.10             shiny_1.7.3             </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [43] bibtex_0.5.0             cli_3.4.1                tools_4.2.2             </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [46] graphicsutils_1.6.0.9000 magrittr_2.0.3           sass_0.4.2              </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [49] tibble_3.1.8             RefManageR_1.4.0         crul_1.3                </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [52] crayon_1.5.2             pkgconfig_2.0.3          ellipsis_0.3.2          </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [55] xml2_1.3.3               timechange_0.1.1         lubridate_1.9.0         </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [58] assertthat_0.2.1         rmarkdown_2.18           httr_1.4.4              </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [61] R6_2.5.1                 compiler_4.2.2</span>
</span></span></code></pre></td></tr></table>
</div>
</div></details>
</div>
</description>
    </item>
		
    
		
    
		
    
		
    <item>
      <title>inSilecoMisc 0.4.0 (part 1/2)</title>
      <link>https://insileco.github.io/2020/04/14/insilecomisc-0.4.0-part-1/2/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://insileco.github.io/2020/04/14/insilecomisc-0.4.0-part-1/2/</guid>
      <description><h2 id="insilecomisc">inSilecoMisc</h2>
<p><a href="https://github.com/inSileco/inSilecoMisc"><code>inSilecoMisc</code></a> is an R 📦 I
have been maintaining for four years now. It was originally designed as a
convenient way to share handy functions. Instead of stacking them in my
<code>.Rprofile</code>, I created a package and made it available on GitHub. <code>inSilecoMisc</code>
is therefore a set of miscellaneous functions, just as other R packages (e.g.
<a href="https://CRAN.R-project.org/package=Hmisc"><code>Hmisc</code></a>) but as I frequently change its API,
it is meant to stay in the experimental stage! I like having <code>inSilecoMisc</code> on
GitHub because it gives a large degree of freedom to experiment new ideas, new
functions and the code remains available and easy to install! Despite the &ldquo;API
instability&rdquo;, the overall quality of the package is constantly improving (at
least, I hope so 😄). I have even included some of the somewhat more
matured functions in the research compendium of recent manuscripts<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<p>Over the last month, I made substantial changes throughout the package. I
re-wrote some functions, improved the documentation of others and added new
features. I also changed the way the <a href="https://kevcaz.github.io/notes/ci/deploypkgdown2/">pkgdown
website is deployed</a> by
<a href="https://travis-ci.org/github/inSileco/inSilecoMisc">Travis</a>. In what follows, I introduced several functions included in
versions 0.4.0. Note that as <code>inSilecoMisc</code> is on GitHub, an easy way
to install <code>inSilecoMisc</code> is provided by the package
<a href="https://cran.r-project.org/web/packages/remotes/index.html"><code>remotes</code></a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="nf">install.packages</span><span class="p">(</span><span class="s">&#34;remotes&#34;</span><span class="p">)</span> <span class="c1"># if not already installed</span>
</span></span><span class="line"><span class="cl"><span class="n">remotes</span><span class="o">::</span><span class="nf">install_github</span><span class="p">(</span><span class="s">&#34;inSileco/inSilecoMisc&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once installed, let&rsquo;s load it!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">library</span><span class="p">(</span><span class="s">&#34;inSilecoMisc&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">packageVersion</span><span class="p">(</span><span class="s">&#34;inSilecoMisc&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#39;0.7.0.9000&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="adjuststrings">adjustStrings</h2>
<p>As an ecologist, I frequently work with multiple datasets, and I often need to
name/rename a bunch of files. One function I often use to do so is <code>sprintf()</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">sprintf</span><span class="p">(</span><span class="s">&#34;file_%02d&#34;</span><span class="p">,</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;file_01&#34; &#34;file_02&#34; &#34;file_03&#34; &#34;file_04&#34; &#34;file_05&#34; &#34;file_06&#34; &#34;file_07&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [8] &#34;file_08&#34; &#34;file_09&#34; &#34;file_10&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>I originally designed
<a href="https://insileco.github.io/inSilecoMisc/reference/adjustStrings.html"><code>adjustStrings()</code></a>
to adjust the number of 0 to a string in a similar fashion:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;01&#34; &#34;02&#34; &#34;03&#34; &#34;04&#34; &#34;05&#34; &#34;06&#34; &#34;07&#34; &#34;08&#34; &#34;09&#34; &#34;10&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>But I was rapidly interested in having a more flexible function. So, I added several parameters to do that!
In the last version of <code>inSilecoMisc</code>, <code>adjustStrings()</code> have 5 arguments:</p>
<ol>
<li><code>x</code>: the input character vector to be adjusted;</li>
<li><code>n</code>: the number of characters to be added or used to determine the length of output strings;</li>
<li><code>extra</code>: the character(s) to be added (<code>0</code> is the default value);</li>
<li><code>align</code>: the string alignment (&ldquo;right&rdquo;, &ldquo;left&rdquo; or &ldquo;center&rdquo;);</li>
<li><code>add</code>: whether <code>n</code> should be the constraint or a number of characters to be added (a constraint by default).</li>
</ol>
<p>By default, <code>adjustStrings()</code> uses <code>n</code> as a constrain for the length of the output strings. so if use <code>n = 4</code> instead of <code>n = 2</code> in the first example, all
elements of the output vector will have 4 characters:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;0001&#34; &#34;0002&#34; &#34;0003&#34; &#34;0004&#34; &#34;0005&#34; &#34;0006&#34; &#34;0007&#34; &#34;0008&#34; &#34;0009&#34; &#34;0010&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Add I change the value of <code>extra</code> to specify the replacement character(s) to be used :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="m">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;1111&#34; &#34;1112&#34; &#34;1113&#34; &#34;1114&#34; &#34;1115&#34; &#34;1116&#34; &#34;1117&#34; &#34;1118&#34; &#34;1119&#34; &#34;1110&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;a&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;aaa1&#34; &#34;aaa2&#34; &#34;aaa3&#34; &#34;aaa4&#34; &#34;aaa5&#34; &#34;aaa6&#34; &#34;aaa7&#34; &#34;aaa8&#34; &#34;aaa9&#34; &#34;aa10&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;---1&#34; &#34;---2&#34; &#34;---3&#34; &#34;---4&#34; &#34;---5&#34; &#34;---6&#34; &#34;---7&#34; &#34;---8&#34; &#34;---9&#34; &#34;--10&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;ab&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;aba1&#34; &#34;aba2&#34; &#34;aba3&#34; &#34;aba4&#34; &#34;aba5&#34; &#34;aba6&#34; &#34;aba7&#34; &#34;aba8&#34; &#34;aba9&#34; &#34;ab10&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>With <code>align</code>, I can choose where extra characters are added:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;right&#34;</span><span class="p">)</span> <span class="c1"># default</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;---1&#34; &#34;---2&#34; &#34;---3&#34; &#34;---4&#34; &#34;---5&#34; &#34;---6&#34; &#34;---7&#34; &#34;---8&#34; &#34;---9&#34; &#34;--10&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;left&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;1---&#34; &#34;2---&#34; &#34;3---&#34; &#34;4---&#34; &#34;5---&#34; &#34;6---&#34; &#34;7---&#34; &#34;8---&#34; &#34;9---&#34; &#34;10--&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;center&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;--1-&#34; &#34;--2-&#34; &#34;--3-&#34; &#34;--4-&#34; &#34;--5-&#34; &#34;--6-&#34; &#34;--7-&#34; &#34;--8-&#34; &#34;--9-&#34; &#34;-10-&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Also, if <code>add = TRUE</code>, then exactly <code>n</code> extra characters are added:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;right&#34;</span><span class="p">,</span> <span class="n">add</span> <span class="o">=</span> <span class="kc">TRUE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;----1&#34;  &#34;----2&#34;  &#34;----3&#34;  &#34;----4&#34;  &#34;----5&#34;  &#34;----6&#34;  &#34;----7&#34;  &#34;----8&#34; </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [9] &#34;----9&#34;  &#34;----10&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;left&#34;</span><span class="p">,</span> <span class="n">add</span> <span class="o">=</span> <span class="kc">TRUE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;1----&#34;  &#34;2----&#34;  &#34;3----&#34;  &#34;4----&#34;  &#34;5----&#34;  &#34;6----&#34;  &#34;7----&#34;  &#34;8----&#34; </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [9] &#34;9----&#34;  &#34;10----&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">4</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;center&#34;</span><span class="p">,</span> <span class="n">add</span> <span class="o">=</span> <span class="kc">TRUE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;--1--&#34;  &#34;--2--&#34;  &#34;--3--&#34;  &#34;--4--&#34;  &#34;--5--&#34;  &#34;--6--&#34;  &#34;--7--&#34;  &#34;--8--&#34; </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [9] &#34;--9--&#34;  &#34;--10--&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that in this last case, lengths of output character strings may differ!
One last remark about how <code>adjustStrings()</code> works when <code>add = FALSE</code>: for a given string, there are 3 scenarios :</p>
<ol>
<li>the string to be adjusted has more characters than <code>n</code>; in this case, the string is simply cut off:</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="s">&#34;ABCD&#34;</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">2</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;efgh&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;AB&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>the string has more characters but the number of character for the adjustment is smaller than the number of <code>extra</code>&rsquo;s character; in this case, <code>extra</code> is cut off:</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="s">&#34;ABCD&#34;</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">6</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;efgh&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;efABCD&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>finally, when <code>extra</code> is too short to adjust the string according to <code>n</code>, <code>extra</code> is repeated:</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">adjustStrings</span><span class="p">(</span><span class="s">&#34;ABCD&#34;</span><span class="p">,</span> <span class="n">n</span> <span class="o">=</span> <span class="m">14</span><span class="p">,</span> <span class="n">extra</span> <span class="o">=</span> <span class="s">&#34;efgh&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;efghefghefABCD&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>These combinations give flexibility to the user. One application of the
<code>adjustStrings()</code> function comes when running a long script. In such situation,
it is convenient to create recognizable code section to ease the navigation
across long output!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="n">report</span> <span class="o">&lt;-</span> <span class="nf">function</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">symbol</span> <span class="o">=</span> <span class="s">&#34;#&#34;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nf">cat</span><span class="p">(</span><span class="nf">adjustStrings</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="m">70</span><span class="p">,</span> <span class="n">symbol</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="s">&#34;center&#34;</span><span class="p">),</span> <span class="s">&#34;\n&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nf">report</span><span class="p">(</span><span class="s">&#34; part 1 &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">report</span><span class="p">(</span><span class="s">&#34; Solving ODE &#34;</span><span class="p">,</span> <span class="s">&#34;~&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">report</span><span class="p">(</span><span class="s">&#34; Last but not least! &#34;</span><span class="p">,</span> <span class="s">&#34;=&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ############################### part 1 ############################### </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Solving ODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  ========================= Last but not least! ========================</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="keepwords">keepWords</h2>
<p><a href="https://insileco.github.io/inSilecoMisc/reference/keepWords.html"><code>keepWords()</code></a> allows the user to select words based on their position in
character strings. Before using it, I would like to introduce <code>loremIpsum()</code>
that generates <a href="https://en.wikipedia.org/wiki/Lorem_ipsum">placeholder texts</a>.
Note that there are several functions to generate placeholder texts available
elsewhere. For instance, <code>stringi</code> has
<a href="https://jangorecki.gitlab.io/data.cube/library/stringi/html/stri_rand_lipsum.html"><code>stri_rand_lipsum()</code></a>
and <a href="https://www.rdocumentation.org/packages/UsingR/versions/2.0-6/topics/lorem"><code>UsingR</code> includes
<code>lorem()</code></a>.
By default, this <code>loremIpsum()</code> function returns two paragraphs of text:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">cat</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    Curabitur pretium tincidunt lacus. Nulla gravida orci a odio. Nullam varius,</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    turpis et commodo pharetra, est eros bibendum elit, nec luctus magna felis</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    sollicitudin mauris. Integer in mauris eu nibh euismod gravida. Duis ac tellus</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    et risus vulputate vehicula. Donec lobortis risus a elit. Etiam tempor. Ut</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    ullamcorper, ligula eu tempor congue, eros est euismod turpis, id tincidunt</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    sapien risus a quam. Maecenas fermentum consequat mi. Donec fermentum.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    Pellentesque malesuada nulla a mi. Duis sapien sem, aliquet nec, commodo eget,</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    consequat quis, neque. Aliquam faucibus, elit ut dictum aliquet, felis nisl</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    adipiscing sapien, sed malesuada diam lacus eget erat. Cras mollis scelerisque</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    nunc. Nullam arcu. Aliquam consequat. Curabitur augue lorem, dapibus quis,</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    laoreet et, pretium ac, nisi. Aenean magna nisl, mollis quis, molestie eu,</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;    feugiat in, orci. In hac habitasse platea dictumst.</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>but it also allows the user to set the number of words of the character string returned:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n tempor incididunt ut labore et dolore magna&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note the escape characters (<code>\n</code>)! Now let&rsquo;s focus on <code>keepWords()</code>. Assuming I
want to extract the second word in both sentences <code>loremIpsum(18)</code> and <code>be or not to be</code>, all I have to do is:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepWords</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="s">&#34;be or not to be&#34;</span><span class="p">),</span> <span class="m">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;ipsum&#34; &#34;or&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>and if I am interested in extracting specific word positions, I can pass a numerical vector:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepWords</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="s">&#34;be or not to be&#34;</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> <span class="m">12</span><span class="o">:</span><span class="m">16</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;Lorem ipsum dolor sit tempor incididunt ut labore et&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [2] &#34;be or not to NA NA NA NA NA&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>As you may have noted, <code>NA</code>s are added when the position selected does not
exist. This behavior could be useful but also annoying! Fortunately, an
argument allows to remove <code>NA</code>s.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepWords</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="s">&#34;be or not to be&#34;</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">4</span><span class="p">,</span> <span class="m">12</span><span class="o">:</span><span class="m">16</span><span class="p">),</span> <span class="n">na.rm</span> <span class="o">=</span> <span class="kc">TRUE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;Lorem ipsum dolor sit tempor incididunt ut labore et&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [2] &#34;be or not to&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Also, <code>collapse</code> allows the user to change the character used to separate words:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepWords</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> <span class="m">14</span><span class="o">:</span><span class="m">18</span><span class="p">),</span> <span class="n">collapse</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;Lorem-ipsum-dolor-sit-amet-consectetur-ut-labore-et-dolore-magna&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>and if <code>collapse = NULL</code> then list will be returned including a vector of the selected words per input string:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepWords</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="s">&#34;be or not to be&#34;</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="o">:</span><span class="m">3</span><span class="p">),</span> <span class="n">collapse</span> <span class="o">=</span> <span class="kc">NULL</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [[1]]</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;ipsum&#34; &#34;dolor&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [[2]]</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;or&#34;  &#34;not&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that all punctuation characters will be removed. This can be changed by tweaking argument <code>split_words</code>!</p>
<p>There are two other functions that work similarly: <code>keepLetters()</code> and <code>keepInitials()</code>. The former selects letters instead of words.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepLetters</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> <span class="m">14</span><span class="o">:</span><span class="m">18</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;Loremiorsit&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">keepLetters</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> <span class="m">14</span><span class="o">:</span><span class="m">18</span><span class="p">),</span> <span class="n">collapse</span> <span class="o">=</span> <span class="s">&#34;-&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;L-o-r-e-m-i-o-r-s-i-t&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">keepLetters</span><span class="p">(</span><span class="nf">loremIpsum</span><span class="p">(</span><span class="m">18</span><span class="p">),</span> <span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">,</span> <span class="m">14</span><span class="o">:</span><span class="m">18</span><span class="p">),</span> <span class="n">collapse</span> <span class="o">=</span> <span class="kc">NULL</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [[1]]</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] &#34;L&#34; &#34;o&#34; &#34;r&#34; &#34;e&#34; &#34;m&#34; &#34;i&#34; &#34;o&#34; &#34;r&#34; &#34;s&#34; &#34;i&#34; &#34;t&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>while the latter extracts initials</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepInitials</span><span class="p">(</span><span class="s">&#34;National Basketball Association&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;NBA&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">keepInitials</span><span class="p">(</span><span class="s">&#34;National Basketball Association&#34;</span><span class="p">,</span> <span class="s">&#34;-&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;N&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Note that if the input character vector has a mixture of lower and upper case, so will the output</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepInitials</span><span class="p">(</span><span class="s">&#34;National basketball association&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;Nba&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>if this annoys you, base functions <code>upper()</code> and <code>lower()</code> come in handy!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">keepInitials</span><span class="p">(</span><span class="nf">tolower</span><span class="p">(</span><span class="s">&#34;National basketball association&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;nba&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nf">keepInitials</span><span class="p">(</span><span class="nf">toupper</span><span class="p">(</span><span class="s">&#34;National basketball association&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] &#34;NBA&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><br>
<h2 id="concluding-remarks">Concluding remarks</h2>
<p>In this post, I focused on <code>inSileco</code>&rsquo;s functions that manipulate character
strings (all of them call
<a href="https://stat.ethz.ch/R-manual/R-devel/library/base/html/strsplit.html"><code>str_split()</code></a>
at some point). If you are interested in learning more about strings
manipulations, you should checkout the ebook <a href="https://www.gastonsanchez.com/r4strings/">&ldquo;Handling Strings with
R&rdquo;</a> by <a href="https://www.gastonsanchez.com/">Gaston
Sanchez</a>. There are also various blog posts on
this topic (for instance
<a href="http://uc-r.github.io/string_manipulation_baseR/">http://uc-r.github.io</a> or on
<a href="https://data-flair.training/blogs/r-string-manipulation/">data-flair</a>) and, obviously, the documentation of packages that do such manipulations (e.g. <a href="https://CRAN.R-project.org/package=stringi"><code>stringi</code></a>).</p>
<p>This concludes the first part of this post, additional features of the
<code>inSilecoMisc</code> package will be introduced the second part of this post 🎉!</p>
<div style="padding: 2rem 0rem 2rem 0rem;">
<details>
<summary>Session info <i class="fa fa-cogs" aria-hidden="true"></i></summary>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="line"><span class="cl"><span class="nf">sessionInfo</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  R version 4.2.2 (2022-10-31)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Platform: x86_64-pc-linux-gnu (64-bit)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Running under: Ubuntu 20.04.5 LTS</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  Matrix products: default</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  locale:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  attached base packages:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] stats     graphics  grDevices utils     datasets  methods   base     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  other attached packages:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [1] inSilecoMisc_0.7.0.9000 inSilecoRef_0.0.1.9000 </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  loaded via a namespace (and not attached):</span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [1] tidyselect_1.2.0  xfun_0.34         bslib_0.4.1       vctrs_0.5.0      </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [5] generics_0.1.3    miniUI_0.1.1.1    htmltools_0.5.3   yaml_2.3.6       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;   [9] utf8_1.2.2        rlang_1.0.6       later_1.3.0       pillar_1.8.1     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [13] jquerylib_0.1.4   httpcode_0.3.0    glue_1.6.2        DBI_1.1.3        </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [17] lifecycle_1.0.3   plyr_1.8.7        stringr_1.4.1     blogdown_1.15    </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [21] htmlwidgets_1.5.4 evaluate_0.18     knitr_1.40        fastmap_1.1.0    </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [25] httpuv_1.6.6      curl_4.3.3        fansi_1.0.3       Rcpp_1.0.9       </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [29] xtable_1.8-4      promises_1.2.0.1  backports_1.4.1   DT_0.26          </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [33] cachem_1.0.6      jsonlite_1.8.3    rcrossref_1.1.0   mime_0.12        </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [37] digest_0.6.30     stringi_1.7.8     bookdown_0.29     dplyr_1.0.10     </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [41] shiny_1.7.3       bibtex_0.5.0      cli_3.4.1         tools_4.2.2      </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [45] magrittr_2.0.3    sass_0.4.2        tibble_3.1.8      RefManageR_1.4.0 </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [49] crul_1.3          crayon_1.5.2      pkgconfig_2.0.3   ellipsis_0.3.2   </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [53] xml2_1.3.3        timechange_0.1.1  lubridate_1.9.0   assertthat_0.2.1 </span>
</span></span><span class="line"><span class="cl"><span class="c1">#R&gt;  [57] rmarkdown_2.18    httr_1.4.4        R6_2.5.1          compiler_4.2.2</span>
</span></span></code></pre></td></tr></table>
</div>
</div></details>
</div>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>see the following <i class="fa fa-github" aria-hidden="true"></i>
repositories:
<a href="https://github.com/McCannLab/HomogenFishOntario">HomogenFishOntario</a> and
<a href="https://github.com/TheoreticalEcosystemEcology/coocc_not_inter">coocc_not_inter</a>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
</description>
    </item>
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    <item>
      <title>Creating empty data frames with dfTemplate() and dfTemplateMatch()</title>
      <link>https://insileco.github.io/2019/02/03/creating-empty-data-frames-with-dftemplate-and-dftemplatematch/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://insileco.github.io/2019/02/03/creating-empty-data-frames-with-dftemplate-and-dftemplatematch/</guid>
      <description>


<p>Creating a data frame is fairly simple but when you need to <a href="https://stackoverflow.com/questions/10689055/create-an-empty-data-frame">create a large empty data frame with columns that have different classes</a> it takes several command lines. A few days ago, I decided to write a function to simplify this operation and I came to realize that such a function would actually be very useful to ease the row binding of data frames whose column names partially match. How so? This post is meant to answer this question!</p>
<div id="insilecomisc" class="section level2">
<h2>inSilecoMisc</h2>
<p>First of all, the functions I am using in this post are available in <a href="http://insileco.github.io/inSilecoMisc/">inSilecoMisc</a> which is an R package where we gathered the miscellaneous functions we wrote and deem worth sharing on GitHub. So the first step to reproduce the examples below is to install <code>inSilecoMisc</code> which is straightforward with the <a href="https://cran.r-project.org/web/packages/devtools/index.html%20package">devtools</a> :</p>
<pre class="r"><code>library(devtools)
install_github(&quot;inSileco/inSilecoMisc&quot;)</code></pre>
<p>Then, load it:</p>
<pre class="r"><code>library(inSilecoMisc)</code></pre>
<p>In this post, I’ll exemplify how to use <code>dfTemplate()</code> and <code>dfTemplateMatch()</code> but if you are interested in other functions in the packages, <a href="http://insileco.github.io/inSilecoMisc/articles/overview.html">check out the tour vignette</a>.</p>
</div>
<div id="generating-empty-data-frames-efficiently" class="section level2">
<h2>Generating empty data frames efficiently</h2>
<p>Let’s start with <code>dfTemplate()</code> that creates a data frame with a specific number of columns.</p>
<pre class="r"><code>df1 &lt;- dfTemplate(cols = 2)
df1
#R&gt;    Var1 Var2
#R&gt;  1   NA   NA
class(df1)
#R&gt;  [1] &quot;data.frame&quot;</code></pre>
<p>By default, the data frame created has only 1 row and the columns are filled out with <code>NA</code>. This can readily be changed using arguments <code>nrows</code> and <code>fill</code>.</p>
<pre class="r"><code>df2 &lt;- dfTemplate(2, nrows = 4, fill = 0)
df2
#R&gt;    Var1 Var2
#R&gt;  1    0    0
#R&gt;  2    0    0
#R&gt;  3    0    0
#R&gt;  4    0    0
df3 &lt;- dfTemplate(cols = 2, nrows = 3, fill = &quot;&quot;)
df3
#R&gt;    Var1 Var2
#R&gt;  1          
#R&gt;  2          
#R&gt;  3</code></pre>
<p>Columns classes are determined by <code>fill</code>:</p>
<pre class="r"><code>class(df1[, 1])
class(df2[, 1])
class(df3[, 1])
#R&gt;  [1] &quot;logical&quot;
#R&gt;  [1] &quot;numeric&quot;
#R&gt;  [1] &quot;character&quot;</code></pre>
<p>And <code>col_classes</code> is used to changed these classes:</p>
<pre class="r"><code>df4 &lt;- dfTemplate(cols = 2, col_classes = &quot;character&quot;)
class(df4[, 1])
class(df4[, 2])
#R&gt;  [1] &quot;character&quot;
#R&gt;  [1] &quot;character&quot;</code></pre>
<p>Arguments <code>fill</code> and <code>col_classes</code> can be vectors that specify content and class
for every columns:</p>
<pre class="r"><code>df5 &lt;- dfTemplate(2, 5, col_classes = c(&quot;character&quot;, &quot;numeric&quot;), fill = c(&quot;&quot;, 5))
df5
class(df5[, 1])
class(df5[, 2])
#R&gt;    Var1 Var2
#R&gt;  1         5
#R&gt;  2         5
#R&gt;  3         5
#R&gt;  4         5
#R&gt;  5         5
#R&gt;  [1] &quot;character&quot;
#R&gt;  [1] &quot;numeric&quot;</code></pre>
<p>Another useful feature of <code>dfTemplate()</code> is that column names of the data frame to be created can be passed as first argument (<code>cols</code>) :</p>
<pre class="r"><code>df5 &lt;- dfTemplate(c(&quot;category&quot;, &quot;value&quot;))</code></pre>
<p>So, now you are able to create custom data frames with a set of column names!</p>
<pre class="r"><code>nms &lt;- LETTERS[1:10]
df6 &lt;- dfTemplate(nms, 10, fill = tolower(nms))
df6
#R&gt;     A B C D E F G H I J
#R&gt;  1  a b c d e f g h i j
#R&gt;  2  a b c d e f g h i j
#R&gt;  3  a b c d e f g h i j
#R&gt;  4  a b c d e f g h i j
#R&gt;  5  a b c d e f g h i j
#R&gt;  6  a b c d e f g h i j
#R&gt;  7  a b c d e f g h i j
#R&gt;  8  a b c d e f g h i j
#R&gt;  9  a b c d e f g h i j
#R&gt;  10 a b c d e f g h i j</code></pre>
</div>
<div id="how-to-flexibly-rbind-a-list-of-data-frames" class="section level2">
<h2>How to <em>flexibly</em> <code>rbind</code> a list of data frames</h2>
<p>Sometimes we need to <code>rbind</code> data frames that do not have all the columns the final data frame must contain. In such case, we first need to append the missing columns because otherwise the default <code>rbind</code> function won’t work. Another solution is to use a package that has a function that do so. For instance, <a href="https://www.rdocumentation.org/packages/plyr/versions/1.8.4/topics/rbind.fill"><code>rbind.fill()</code> from the <code>plyr</code> package</a> allows to perform such <em>flexible</em> <code>rbind</code>. Also, the package <a href="https://cran.r-project.org/web/packages/data.table/index.html">data.table</a> includes a <code>rbind()</code> method for <code>data.table</code> objects that handles such situation (see <a href="https://stackoverflow.com/questions/18003717/efficient-way-to-rbind-data-frames-with-different-columns">this answer on <i class="fa fa-stack-overflow" aria-hidden="true"></i></a>). In this last section, I would like to show how to <code>rbind</code> data frames flexibly with <code>dfTemplateMatch()</code> that is written in base R.</p>
<p>Let me first introduces <code>dfTemplateMatch()</code>. This function takes a data frame as the first argument (<code>x</code>) and the second argument (<code>y</code>) could be another data frame or a vector of character strings. Based on <code>x</code> and <code>y</code>, <code>dfTemplateMatch()</code> creates a data frame that has the same number of rows as <code>x</code> and add columns for all names found in <code>y</code> that are not found in <code>x</code>. Before calling <code>dfTemplateMatch()</code> I create two data frames :</p>
<pre class="r"><code>df7 &lt;- df6[1:5, 1:4]
df7
#R&gt;    A B C D
#R&gt;  1 a b c d
#R&gt;  2 a b c d
#R&gt;  3 a b c d
#R&gt;  4 a b c d
#R&gt;  5 a b c d
df8 &lt;- df6[4:6]
df8
#R&gt;     D E F
#R&gt;  1  d e f
#R&gt;  2  d e f
#R&gt;  3  d e f
#R&gt;  4  d e f
#R&gt;  5  d e f
#R&gt;  6  d e f
#R&gt;  7  d e f
#R&gt;  8  d e f
#R&gt;  9  d e f
#R&gt;  10 d e f</code></pre>
<p>Now I use <code>dfTemplateMatch()</code> to create a third data frame based on two other:</p>
<pre class="r"><code>dfTemplateMatch(df7, df8)
#R&gt;    A B C D  E  F
#R&gt;  1 a b c d NA NA
#R&gt;  2 a b c d NA NA
#R&gt;  3 a b c d NA NA
#R&gt;  4 a b c d NA NA
#R&gt;  5 a b c d NA NA</code></pre>
<p>As expected, the output has 5 rows as <code>df6</code> and columns that are not in <code>df6</code> but in <code>df7</code> has been appended to <code>df6</code>. It is possible to use arguments <code>fill</code> and <code>col_classes</code> to custom the columns added.</p>
<pre class="r"><code>dfTemplateMatch(df7, df8, fill = 1, col_classes = &quot;numeric&quot;)
#R&gt;    A B C D E F
#R&gt;  1 a b c d 1 1
#R&gt;  2 a b c d 1 1
#R&gt;  3 a b c d 1 1
#R&gt;  4 a b c d 1 1
#R&gt;  5 a b c d 1 1</code></pre>
<p>And there is an argument <code>yonly</code> that allows the user to keep only names of <code>y</code> (when <code>yonly = TRUE</code>).</p>
<pre class="r"><code>dfTemplateMatch(df7, df8, yonly = TRUE, fill = 1, col_classes = &quot;numeric&quot;)
#R&gt;    D E F
#R&gt;  1 d 1 1
#R&gt;  2 d 1 1
#R&gt;  3 d 1 1
#R&gt;  4 d 1 1
#R&gt;  5 d 1 1</code></pre>
<p>Now let me show you how to <code>rbind()</code> a specific subset of columns of a list of data frame that may or may not have these columns. Let me start by creating a list of data frames.</p>
<pre class="r"><code>lsdf &lt;- apply(
  replicate(5, sample(nms, 5)),
  2,
  function(x) dfTemplate(x, nrows = 5, fill = tolower(x))
)
lsdf
#R&gt;  [[1]]
#R&gt;    E I F C G
#R&gt;  1 e i f c g
#R&gt;  2 e i f c g
#R&gt;  3 e i f c g
#R&gt;  4 e i f c g
#R&gt;  5 e i f c g
#R&gt;  
#R&gt;  [[2]]
#R&gt;    I A H C D
#R&gt;  1 i a h c d
#R&gt;  2 i a h c d
#R&gt;  3 i a h c d
#R&gt;  4 i a h c d
#R&gt;  5 i a h c d
#R&gt;  
#R&gt;  [[3]]
#R&gt;    H G E B J
#R&gt;  1 h g e b j
#R&gt;  2 h g e b j
#R&gt;  3 h g e b j
#R&gt;  4 h g e b j
#R&gt;  5 h g e b j
#R&gt;  
#R&gt;  [[4]]
#R&gt;    J C E B A
#R&gt;  1 j c e b a
#R&gt;  2 j c e b a
#R&gt;  3 j c e b a
#R&gt;  4 j c e b a
#R&gt;  5 j c e b a
#R&gt;  
#R&gt;  [[5]]
#R&gt;    G A C E J
#R&gt;  1 g a c e j
#R&gt;  2 g a c e j
#R&gt;  3 g a c e j
#R&gt;  4 g a c e j
#R&gt;  5 g a c e j</code></pre>
<p>So the goal here is to create a data frame that contains only the five first
columns, i.e. A, B, C, D, E, the remaining columns must be discarded and
when one selected column is missing, it must be added (filled out with <code>NA</code>).
To do so, I simply need to call <code>dfTemplateMatch()</code>:</p>
<pre class="r"><code>lsdf2 &lt;- lapply(lsdf, dfTemplateMatch, LETTERS[1:5], yonly = TRUE)
lsdf2
#R&gt;  [[1]]
#R&gt;    E C  A  B  D
#R&gt;  1 e c NA NA NA
#R&gt;  2 e c NA NA NA
#R&gt;  3 e c NA NA NA
#R&gt;  4 e c NA NA NA
#R&gt;  5 e c NA NA NA
#R&gt;  
#R&gt;  [[2]]
#R&gt;    A C D  B  E
#R&gt;  1 a c d NA NA
#R&gt;  2 a c d NA NA
#R&gt;  3 a c d NA NA
#R&gt;  4 a c d NA NA
#R&gt;  5 a c d NA NA
#R&gt;  
#R&gt;  [[3]]
#R&gt;    E B  A  C  D
#R&gt;  1 e b NA NA NA
#R&gt;  2 e b NA NA NA
#R&gt;  3 e b NA NA NA
#R&gt;  4 e b NA NA NA
#R&gt;  5 e b NA NA NA
#R&gt;  
#R&gt;  [[4]]
#R&gt;    C E B A  D
#R&gt;  1 c e b a NA
#R&gt;  2 c e b a NA
#R&gt;  3 c e b a NA
#R&gt;  4 c e b a NA
#R&gt;  5 c e b a NA
#R&gt;  
#R&gt;  [[5]]
#R&gt;    A C E  B  D
#R&gt;  1 a c e NA NA
#R&gt;  2 a c e NA NA
#R&gt;  3 a c e NA NA
#R&gt;  4 a c e NA NA
#R&gt;  5 a c e NA NA</code></pre>
<p>And now I can seamlessly <code>rbind()</code> the list <code>lsdf2</code>!</p>
<pre class="r"><code>do.call(rbind, lsdf2)
#R&gt;        E    C    A    B    D
#R&gt;  1     e    c &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;
#R&gt;  2     e    c &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;
#R&gt;  3     e    c &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;
#R&gt;  4     e    c &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;
#R&gt;  5     e    c &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;
#R&gt;  6  &lt;NA&gt;    c    a &lt;NA&gt;    d
#R&gt;  7  &lt;NA&gt;    c    a &lt;NA&gt;    d
#R&gt;  8  &lt;NA&gt;    c    a &lt;NA&gt;    d
#R&gt;  9  &lt;NA&gt;    c    a &lt;NA&gt;    d
#R&gt;  10 &lt;NA&gt;    c    a &lt;NA&gt;    d
#R&gt;  11    e &lt;NA&gt; &lt;NA&gt;    b &lt;NA&gt;
#R&gt;  12    e &lt;NA&gt; &lt;NA&gt;    b &lt;NA&gt;
#R&gt;  13    e &lt;NA&gt; &lt;NA&gt;    b &lt;NA&gt;
#R&gt;  14    e &lt;NA&gt; &lt;NA&gt;    b &lt;NA&gt;
#R&gt;  15    e &lt;NA&gt; &lt;NA&gt;    b &lt;NA&gt;
#R&gt;  16    e    c    a    b &lt;NA&gt;
#R&gt;  17    e    c    a    b &lt;NA&gt;
#R&gt;  18    e    c    a    b &lt;NA&gt;
#R&gt;  19    e    c    a    b &lt;NA&gt;
#R&gt;  20    e    c    a    b &lt;NA&gt;
#R&gt;  21    e    c    a &lt;NA&gt; &lt;NA&gt;
#R&gt;  22    e    c    a &lt;NA&gt; &lt;NA&gt;
#R&gt;  23    e    c    a &lt;NA&gt; &lt;NA&gt;
#R&gt;  24    e    c    a &lt;NA&gt; &lt;NA&gt;
#R&gt;  25    e    c    a &lt;NA&gt; &lt;NA&gt;</code></pre>
<div id="voilà-this-is-what-i-call-a-flexible-rbind-i-hope-youll-find-this-helpful-boom" class="section level4">
<h4>Voilà! This is what I call a <em>flexible</em> <code>rbind</code>! I hope you’ll find this helpful! 💥</h4>
<div style="padding: 2rem 0rem 2rem 0rem;">
<details>
<summary>
Session info <i class="fa fa-cogs" aria-hidden="true"></i>
</summary>
<pre class="r"><code>sessionInfo()
#R&gt;  R version 4.2.2 (2022-10-31)
#R&gt;  Platform: x86_64-pc-linux-gnu (64-bit)
#R&gt;  Running under: Ubuntu 20.04.5 LTS
#R&gt;  
#R&gt;  Matrix products: default
#R&gt;  BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0
#R&gt;  LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0
#R&gt;  
#R&gt;  locale:
#R&gt;   [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8       
#R&gt;   [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
#R&gt;   [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          
#R&gt;  [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   
#R&gt;  
#R&gt;  attached base packages:
#R&gt;  [1] stats     graphics  grDevices utils     datasets  methods   base     
#R&gt;  
#R&gt;  other attached packages:
#R&gt;  [1] inSilecoMisc_0.7.0.9000 inSilecoRef_0.0.1.9000 
#R&gt;  
#R&gt;  loaded via a namespace (and not attached):
#R&gt;   [1] tidyselect_1.2.0  xfun_0.34         bslib_0.4.1       vctrs_0.5.0      
#R&gt;   [5] generics_0.1.3    miniUI_0.1.1.1    htmltools_0.5.3   yaml_2.3.6       
#R&gt;   [9] utf8_1.2.2        rlang_1.0.6       later_1.3.0       pillar_1.8.1     
#R&gt;  [13] jquerylib_0.1.4   httpcode_0.3.0    glue_1.6.2        DBI_1.1.3        
#R&gt;  [17] lifecycle_1.0.3   plyr_1.8.7        stringr_1.4.1     blogdown_1.15    
#R&gt;  [21] htmlwidgets_1.5.4 evaluate_0.18     knitr_1.40        fastmap_1.1.0    
#R&gt;  [25] httpuv_1.6.6      curl_4.3.3        fansi_1.0.3       Rcpp_1.0.9       
#R&gt;  [29] xtable_1.8-4      promises_1.2.0.1  backports_1.4.1   DT_0.26          
#R&gt;  [33] cachem_1.0.6      jsonlite_1.8.3    rcrossref_1.1.0   mime_0.12        
#R&gt;  [37] digest_0.6.30     stringi_1.7.8     bookdown_0.29     dplyr_1.0.10     
#R&gt;  [41] shiny_1.7.3       bibtex_0.5.0      cli_3.4.1         tools_4.2.2      
#R&gt;  [45] magrittr_2.0.3    sass_0.4.2        tibble_3.1.8      RefManageR_1.4.0 
#R&gt;  [49] crul_1.3          crayon_1.5.2      pkgconfig_2.0.3   ellipsis_0.3.2   
#R&gt;  [53] xml2_1.3.3        timechange_0.1.1  lubridate_1.9.0   assertthat_0.2.1 
#R&gt;  [57] rmarkdown_2.18    httr_1.4.4        R6_2.5.1          compiler_4.2.2</code></pre>
</details>
</div>
</div>
</div>
</description>
    </item>
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    <item>
      <title>A few thoughts on R packages</title>
      <link>https://insileco.github.io/2018/12/03/a-few-thoughts-on-r-packages/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://insileco.github.io/2018/12/03/a-few-thoughts-on-r-packages/</guid>
      <description><p><a href="https://www.linkedin.com/in/jonasgeschke/">Jonas Geschke</a>,
<a href="https://bartomeuslab.com/">Ignasi Bartomeus</a> and I have recently released <a href="https://cran.r-project.org/web/packages/rcites/index.html">rcites v-1.0.0</a> on CRAN, a R client for the <a href="https://api.speciesplus.net/">Species+ API</a> after it has been reviewed by <a href="https://rOpenSci.org/">rOpenSci</a>. In this post, I would like to share this recent experience as well as several valuable resources.</p>
<br>

<center>
  <figure>
    <img class="mg-bot" src="/2018/12/03/a-few-thoughts-on-r-packages/rcites_cran.png" alt="" width="100%" >
    <figcaption><span class="highlight"></span></figcaption>
  </figure>
</center>



<br>
<h2 id="what-is-an-r-package">What is an R package?</h2>
<p>In the introduction of his book <a href="http://r-pkgs.had.co.nz/intro.html">R packages</a>, Hadley Wickham wrote:</p>
<blockquote>
<p>A package bundles together code, data, documentation, and tests, and is easy to share with others.</p>
</blockquote>
<p>I like the way the famous R developer presents a package, it is straightforward and crystal clear. Interestingly enough, it describes what a package <em>does</em>, not what a package <em>is</em>. Defining an R package is actually harder than I thought! I remember the first time, I&rsquo;ve tried to characterize an R package, I tried to answer a couple of questions and found the answers quite surprising:</p>
<ul>
<li>Are R packages extensions available on <a href="https://cran.r-project.org/">CRAN</a> or <a href="https://www.bioconductor.org/">Bioconductor</a>? <strong>Not necessarily!</strong></li>
</ul>
<p>The answer sounds obvious nowadays with over than <a href="https://rdrr.io/">40K R packages on Github</a>, but 10 years ago it wasn&rsquo;t. That said, we shall recall that an R package that only exists on a single computer still is an R package.</p>
<ul>
<li>Should a package have a minimum number of functions? <strong>No</strong></li>
</ul>
<p>Even among popular packages, the number of functions is not a criterion. For instance, <a href="https://cran.r-project.org/web/packages/vegan/">vegan</a> exports 192 functions (as of version 2.5.2) while <a href="https://cran.r-project.org/web/packages/png/">png</a> only includes two functions.</p>
<ul>
<li>Should a package be designed to perform a specific analysis? <strong>No</strong></li>
</ul>
<p>Two comments here. First, R packages do many things: they <a href="/tuto/rinspace/rinspace_homepage/index.html">can turn R into a powerful Geographic Information System</a> or make your R session crash every time you load it (see <a href="https://github.com/romainfrancois/trump">trump</a>)! Packages such as <a href="https://cran.r-project.org/web/packages/ape/">ape</a> provide try to be as exhaustive as possible for a certain type of analysis while other such as <a href="https://cran.r-project.org/web/packages/Hmisc/">Hmisc</a> are sets of miscellaneous functions. Second, it sometimes make more sense for development purposes to split the full pipeline into several packages so that more than one package are required for certain analysis.</p>
<p>So <strong>what is an R package?</strong> Well, my own definition would be something along this line:</p>
<blockquote>
<p>A set of files that passes the command <code>R CMD INSTALL</code>.</p>
</blockquote>
<p>From this definition, one should understand that an R package does not perform
any analysis correctly. Rather, an R package is an organized set of files that
passes a set of tests, <em>a lot of tests</em>!</p>
<h2 id="why-write-an-r-package">Why write an R package?</h2>
<p>This is another crucial question. In <a href="http://r-pkgs.had.co.nz/intro.html">his introduction</a>,
Hadley Wickham emphasized that R packages are a standard way to organize your
project: it saves you time, gives you an opportunity to acquire good practices when writing functions and makes the sharing of your code easy.
Once you get used to create and handle R packages, it becomes natural to use
the standard file organisation to structure your project. With this habit, the question &ldquo;where is this file?&rdquo; vanishes and you stop using <code>setwd()</code>. Note that, some authors propose similar structure of R projects, e.g. <a href="https://nicercode.github.io/blog/2013-04-05-projects/">this post on nicercode</a>, but you&rsquo;ll need to tweak a little bit if you want to test your code with standard tools.</p>
<p>I would like to point out that one of the main reasons of creating a package is for efficiency purposes, not necessarily to submit it to the CRAN. To me, this is <em>extremely</em> important. This means that you do not need to have a good reason to write a package, if you work regularly with R you can write packages, whenever you decide to turn your set of functions for a particular project into an actual package, then the step to do so will be small. Of course the sharing of your package is an important question, but I think this is different question: <em>If you write a package it does not imply you&rsquo;ll share it</em>.</p>
<h2 id="why-share-your-r-package">Why share your R package?</h2>
<p>There are different answers to this question and depending on the answer, you
may consider different options to share your code. I do not intend to be exhaustive here rather I provide three examples I am familiar with.</p>
<h3 id="1--my-personal-helper-functions">1- My personal helper functions</h3>
<p>When I keep repeating the same lines of code in a project, I write a function.
Sometimes, the function can actually be used in different projects. I used to write this kind of function in a dedicated <code>.R</code> file that was loaded during my custom startup process (see <code>?Startup</code> in R). Three years ago, I decided to make a package out of these functions. There were three main reasons for doing so. First, I was still learning how to write packages, so this was another opportunity to practice. Second, I wanted to document these functions. Last but not least, I thought these functions might be useful to other people so writing an R package was an efficient way to share them. The package is now on GitHub: <a href="https://github.com/inSileco/inSilecoMisc">inSilecoMisc</a>, everyone can use it, borrow one or more functions for his own project, report issues, etc. Even though the package is exhaustively tested, <a href="https://github.com/inSileco/inSilecoMisc">inSilecoMisc</a> remains a collection of sub-optimal functions which according to me does not deserve to be published on the CRAN, GitHub and the additional web services I use cover all my needs!</p>
<h3 id="2--the-code-to-reproduce-a-paper">2- The code to reproduce a paper</h3>
<p>Reproducible science matters to me, when I publish a paper I cannot see any reason to not share the analysis pipeline with the rest of the scientific community: it demands a little more of my time to save a huge amount of time for them. To do so, I now create a small package that contains the analysis. The first time I did so was for a paper we did with a couple of colleagues where we compared <a href="https://www.frontiersin.org/articles/10.3389/fevo.2017.00175/ful">media coverage for climate change and biodiversity</a>. Unfortunately, we were not able to make the gathering of data reproducible (believe me, we&rsquo;ve tried, the only solution was to work on private API, so, making the code not reproducible for the majority of researchers), we however turned the data collected into <code>.Rdata</code> files and the set of functions were stored on a GitHub repository: <a href="https://github.com/KevCaz/burningHouse">burningHouse</a>. This ensures the interoperability of the package, shows to other researchers how we did it the analysis and let them report issues with the code. Moreover, <a href="https://zenodo.org/">Zenodo</a> makes it simple to assign a DOI to the repository so that people can reference this work if needed. Note that it becomes quite common for researchers to share their code that way, see for instance <a href="https://github.com/hyenaproject/vullioud2018">this repository</a> associated with this <a href="https://doi.org/10.1038/s41559-018-0718-9">nice paper about the girl power in the clans of Hyenas</a>.</p>
<h3 id="3--a-r-client-for-a-web-api">3- A R-Client for a web API</h3>
<p>A year ago now, I was in a hackathon in Ghent (my first hackathon) and I sat on the same table as <a href="https://www.linkedin.com/in/jonasgeschke/">Jonas Geschke</a>, <a href="https://bartomeuslab.com/">Ignasi Bartomeus</a> (among other colleagues). We worked intensively on a prototype of a package listed in <a href="https://github.com/rOpenSci/wishlist/issues/29">the wishlist of rOpenSci</a>:
an R-Client to the CITES-API. After we completed the first version, we <a href="https://github.com/rOpenSci/onboarding/issues/244">submitted it to the review process of rOpenSci</a>. And now <a href="https://github.com/rOpenSci/rcites">rcites is part of rOpenSci</a> (more about this story <a href="https://github.com/rOpenSci/roweb2/pull/344#issuecomment-442945039">here</a>). So here is a tangible example where the package is worth making the CRAN (I think so) and even a dedicated organization (<a href="https://github.com/ropensci">rOpenSci</a>) on GitHub. The package is general, has a specific goal, helps people retrieving data to do science and helps them to do it in a reproducible way. So it should be broadly shared. Plus, making the package part of an organization such as rOpenSci means that the package will likely keep being maintained properly.</p>
<h2 id="how-to-proceed">How to proceed?</h2>
<p>Below, I give a brief overview of how we proceeded for <a href="https://cran.r-project.org/web/packages/rcites/index.html">rcites</a>. Note that if you are interested in writing an R package, you must read more about what I am quickly mentioning below, so scroll down to the end of this post where I listed a couple of very helpful resources. After 3 years of experience with packages, I do not frequently have to look at documentation, but when I do, I always find the answers in <a href="http://r-pkgs.had.co.nz/">R packages</a> or
<a href="http://adv-r.had.co.nz/">Advanced R</a> both by Hadley Wickham or in the exhaustive and technical documentation <a href="https://cran.r-project.org/doc/manuals/r-release/R-exts.html">Writing R extensions</a> available on the CRAN.</p>
<h3 id="local-development">Local development</h3>
<p>I personally use the set of packages developed by Hadley Wickham and colleagues. His book <a href="http://r-pkgs.had.co.nz/">R packages</a> explains how to write your package with them. Installing these packages and start working on package is a simple as the line of command below:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="nf">install.packages</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s">&#34;devtools&#34;</span><span class="p">,</span> <span class="s">&#34;roxygen2&#34;</span><span class="p">,</span> <span class="s">&#34;testthat&#34;</span><span class="p">,</span> <span class="s">&#34;knitr&#34;</span><span class="p">))</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Briefly:</p>
<ul>
<li><a href="https://cran.r-project.org/web/packages/devtools/index.html">roxygen2</a>: document the functions;</li>
<li><a href="https://cran.r-project.org/web/packages/devtools/index.html">testthat</a>: test your code;</li>
<li><a href="https://cran.r-project.org/web/packages/devtools/index.html">knitr</a>: build the vignette;</li>
<li><a href="https://cran.r-project.org/web/packages/devtools/index.html">devtools</a>: rule them all! (<a href="https://www.tidyverse.org/articles/2018/10/devtools-2-0-0/">version 2.0</a> has recently been released).</li>
</ul>
<p>In a nutshell, the workflow with this setup looks like this:</p>
<pre tabindex="0"><code>1-&#34;fix/write code&#34; =&gt; 2-load_all() =&gt; 3-document() =&gt; 4-test() =&gt; 5-check()
</code></pre><p>Basically, you follow these steps for every feature you are adding to your package and go back to step 1- if one of the subsequent steps fails. The package <a href="https://github.com/r-lib/usethis">usethis</a> is also worth mentioning as it automates many steps of the process. Moreover, <code>package.skeleton()</code>
creates a package skeleton for you and <a href="http://dirk.eddelbuettel.com/">Dirk Eddelbuettel</a> has extended the function for packages that are linked to <a href="http://www.rcpp.org/">Rcpp</a>, see
<a href="https://github.com/RcppCore/Rcpp/blob/master/R/Rcpp.package.skeleton.R"><code>Rcpp.package.skeleton()</code></a>.</p>
<p>I would like to conclude this part by pointing out that using the set of packages Hadley Wickham and colleagues isn&rsquo;t mandatory, but remember, their developers have cleverly automated many steps for writing R packages, so why not use the fruit of their labor?</p>
<h3 id="version-control-and-continuous-integration">Version control and Continuous Integration</h3>
<p>Web-based <a href="https://git-scm.com/"><i class="fa fa-git" aria-hidden="true"></i></a>-repository managers such (GitHub <i class="fa fa-github" aria-hidden="true"></i>, GitLab <i class="fa fa-gitlab" aria-hidden="true"></i>, Bitbucket <i class="fa fa-bitbucket" aria-hidden="true"></i>, etc.) are very powerful tools to develop your packages
especially to work with collaborators, get feed back and add web-services to improve your workflow. First, <a href="https://git-scm.com/"><i class="fa fa-git" aria-hidden="true"></i></a>
it-self is a fantastic tool (beyond the scope of this post, I recommend you the reading of <a href="https://git-scm.com/book/en/v2">Pro Git</a>). Second, by hosting your package on GitHub, your are basically sending an invitation at large to contribute to your project: &ldquo;hey devs, this is the project I am working on, if you are interested, please star, clone, fork, report issues, submit pull requests, etc.&rdquo;! Furthermore, once on GitHub, people can easily install your package directly from R:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="n">devtools</span><span class="o">::</span><span class="nf">install_github</span><span class="p">(</span><span class="s">&#34;rOpenSci/rcites&#34;</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Last, the number of <a href="https://github.com/marketplace">web-services</a> you can add to your repository is tremendous (sign in with GitHub and let the <a href="https://oauth.net/2/">protocol OAuth 2.0</a> do the rest). There are two kind services I always use for all my R packages: <a href="https://en.wikipedia.org/wiki/Continuous_integration">continuous integration (CI)</a> and <a href="https://en.wikipedia.org/wiki/Code_coverage">code coverage</a>. I would like to expand a little bit on this two.</p>
<h4 id="continuous-integration">Continuous integration</h4>
<p>I personally use <a href="http://docs.travis-ci.com/user/languages/r/">Travis</a> that covers MacOS +  Ubuntu and <a href="https://github.com/krlmlr/r-appveyor">AppVeyor</a> for Windows. As <a href="https://www.slant.co/topics/186/~best-hosted-continuous-integration-services#8">continuous integration services</a> they allow me to check that my package can be seamlessly built on different systems freshly installed, for a specific version of R. I am very grateful to developers that makes the use of this service really easy!</p>
<h4 id="code-coverage">Code coverage</h4>
<p>The code coverage is the percentage of coding lines checked by your
<a href="https://en.wikipedia.org/wiki/Unit_testing">unit testing</a>. Unit testing plays two critical roles. First, it checks that your code do what you want it to do. Second, once your tests are already written, they are extremely useful when you are fixing a bug, restructuring the code or adding new features as you can immediately be aware whether or not the changes you are doing affect the behavior of the other part of your package and therefore unit testing avoids multiplying bugs via side effects brought by the new lines of code. I personally use <a href="https://cran.r-project.org/web/packages/testthat/index.html">testhat</a> to write my tests and <a href="https://codecov.io/">codecov</a> to show the code coverage and benefit from the neat visualizations it automatically produces (see for instance the <a href="https://codecov.io/gh/rOpenSci/rcites">results for rcites</a>). I must also mention that I&rsquo;ve recently tried <a href="https://coveralls.io/">coveralls</a> and I like its design very much, so I may use it more in a near future!
Many thanks to <a href="https://github.com/jimhester">Jim Hester</a> for <a href="https://cran.r-project.org/web/packages/covr/vignettes/how_it_works.html">his work on the integration of these services for R packages</a>.</p>
<h3 id="license">License</h3>
<p>Even though I am no expert on this topic, I can tell that choosing your license matters it specifies what people can do with your code. I recommend you to go and visit this website: <a href="http://choosealicense.com">&ldquo;ChooseALicense&rdquo;</a> and if this question is critical to your project, you should better ask somebody that is knowledgeable about <a href="https://en.wikipedia.org/wiki/Intellectual_property">Intellectual Property (IP)</a>.</p>
<h3 id="release-on-github-and-on-the-cran">Release on GitHub and on the CRAN</h3>
<p>This topic is also well covered in Hadley&rsquo;s book, so I suggest you read <a href="r-pkgs.had.co.nz/release.html">this chapter</a>.
A release is an achievement, you have reached a milestone and the package works great, so you are basically spreading the news &ldquo;I/we&rsquo;ve reached a milestone guys, here it is!&rdquo;. Doing a release is as simple as changing the number of the version in the <code>DESCRIPTION</code> file. That said, there are ways of making it more official and more useful.</p>
<p>First on GitHub, you can <a href="https://help.github.com/articles/creating-releases/">create releases</a>. After editing the version number in <code>DESCRIPTION</code>, you can push and create a release and even add a DOI with the version via <a href="https://zenodo.org/">Zenodo</a>. You can also submit your package to the <a href="https://cran.r-project.org/">CRAN</a> or <a href="https://www.bioconductor.org/">Bioconductor</a> which demands a little more work.
Either way, at this stage you must choose a version number. Easy peasy? Yes, but this choice does matter. It is all about making the numbers used as meaningful as possible to provide useful landmarks as you keep on developing your package. <a href="http://semver.org">Semantic Versioning</a> does a great work at explaining this, check this website out! I also suggest that you spend some time thinking about how useful it is to make the <a href="https://en.wikipedia.org/wiki/TeX">version number converging to pi</a>.</p>
<p>I have no experience submitting my package to <a href="https://www.bioconductor.org/">Bioconductor</a>. I can only tell about the <a href="https://cran.r-project.org/submit.html">CRAN</a>. I&rsquo;ll be brief as you can read how to do so in <a href="r-pkgs.had.co.nz/release.html">Hadley&rsquo;s book</a>:</p>
<ol>
<li>
<p>You must test your package on the main platforms (MacOS, Windows, Linux) and report warnings/notes if any. Travis and AppVeyor I introduced above are very useful for this, if they are part of your workflow, basically this step is done, I however recommend to use <a href="https://win-builder.r-project.org/">win-builder</a> (one command line <code>devtools::build_win()</code>) and also to have a look at <a href="https://builder.r-hub.io/">the r-hub builder</a>.</p>
</li>
<li>
<p>You must write the results in <code>cran-comments.md</code> where you must mention if it is your first submission and if your package has downstream dependencies.</p>
</li>
</ol>
<p>Below is the <a href="https://github.com/rOpenSci/rcites/blob/master/cran-comments.md">most recent one for rcites</a>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-md" data-lang="md"><span class="line"><span class="cl"><span class="gu">## This is our second submission
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>
</span></span><span class="line"><span class="cl"><span class="gu">## Test environments
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>
</span></span><span class="line"><span class="cl"><span class="k">*</span> local Debian testing (4.18.0-2-amd64), R 3.5.1
</span></span><span class="line"><span class="cl"><span class="k">*</span> MacOSX 10.13.3 (on Travis-ci), R:release
</span></span><span class="line"><span class="cl"><span class="k">*</span> Ubuntu 14.04 (on Travis-ci), R 3.4.4, R:release, R:devel
</span></span><span class="line"><span class="cl"><span class="k">*</span> win-builder (R:release and R:devel)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="gu">## R CMD check results (win-builder)
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>
</span></span><span class="line"><span class="cl">There were no ERRORs, WARNINGs or NOTEs.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Installation time in seconds: 7
</span></span><span class="line"><span class="cl">Check time in seconds: 99
</span></span><span class="line"><span class="cl">Status: OK
</span></span><span class="line"><span class="cl">R Under development (unstable) (2018-11-12 r75592)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="gu">## Downstream dependencies
</span></span></span><span class="line"><span class="cl"><span class="gu"></span>
</span></span><span class="line"><span class="cl">There are currently no downstream dependencies for this package.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once done, you are ready to submit, so thanks to <a href="https://cran.r-project.org/web/packages/devtools/">devtools</a>, just one command line:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="n">devtools</span><span class="o">::</span><span class="nf">submit_cran</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>After this, you&rsquo;ll receive an email (the one you wrote in the maintainer field of <code>DESCRIPTION</code>) to confirm the submission. You may receive emails from people that manage the CRAN because of issues or potential improvements. So far, they have given me one good advice: using <code>\donttest{}</code> instead of commenting out examples that cannot be tested on the CRAN.</p>
<h2 id="why-submit-your-package-to-a-peer-review-process">Why submit your package to a peer review process?</h2>
<p>Let&rsquo;s assume your package is already on GitHub and the built passes on both Travis and Appveyor and that the code coverage is above 90%, is it enough? Does that mean you wrote a good package? What is a good package? To me, a good package does not need to be among most downloaded ones but rather one that is well coded. There are a set of criteria that can actually be objectively evaluated:</p>
<ul>
<li>
<p><strong>good practice</strong>: is your package compliant to good practices? Given the number of ways R offers to do the same things, e.g. <code>&lt;-</code> or <code>=</code> to assign a value to a variable (that puzzles some people), it is recommended to follow good practice. <a href="https://github.com/MangoTheCat/goodpractice">goodpractice</a> checks if your package follows them. For instance, <code>goodpractice::gp()</code> checks that you are using <code>&lt;-</code> rather than <code>=</code>, that your lines of code do not exceed 80 character, that you are using <code>TRUE</code> and <code>FALSE</code> instead of <code>T</code> and <code>F</code>, etc..</p>
</li>
<li>
<p><strong>readability</strong> is your code well-commented and easy to understand? This determines how easy it would be for new contributors to understand your code and thus how easy it would be for them to contribute. Note that for efficiency purposes, some steps may sometimes be hard to understand, in such case, you must comment how you did it and why, this is also relevant for the future you.</p>
</li>
<li>
<p><strong>Dependencies</strong>: there is nothing wrong with <a href="http://www.stat.tugraz.at/AJS/ausg121/121Hornik.pdf">depending on other packages</a>. However,
<a href="https://recology.info/2018/10/limiting-dependencies/">being parsimonious and using adequate package matter</a> (the <a href="https://en.wikipedia.org/wiki/Occam%27s_razor">Occam&rsquo;s razor</a> version for packages). The first release of <a href="https://cran.r-project.org/web/packages/rcites/">rcites</a> imported <a href="https://cran.r-project.org/web/packages/data.table/">data.table</a>. During the review of the package <a href="https://github.com/noamross">Noam Ross</a> suggested that data.table is actually used for efficiency purposes and that in the context of <a href="https://cran.r-project.org/web/packages/rcites/">rcites</a>, it was an extra dependency for no real benefice, which is true, so we changed this.</p>
</li>
<li>
<p><strong>Code redundancy</strong>: is your code a bunch of copy paste or is it well-designed so that it avoids redundancy and makes the debug efficient? This may sound technical but a code well-structured is also a code that is easy to debug and to further develop.</p>
</li>
<li>
<p><strong>Efficiency</strong> is your code efficient? There are many tips given by Colin Gillespie and Robin Lovelace in <a href="https://csgillespie.github.io/efficientR/">Efficient R programming</a>, have a look!</p>
</li>
<li>
<p><strong>User experience</strong> Never wondered why Hadley&rsquo;s packages are among the most popular ones? Well, he cares a lot about the users. I am sure he thinks a lot about how people will use a package and how to make it as intuitive as possible. Moreover, he exhaustively documents his works. This is a critical part. Making your package user friendly is about its design and documenting your package. Without a good documentation, you&rsquo;ll miss your shot. Build vignettes! Explain carefully how your package works, build a website! You can no longer say that this is hard because <a href="https://pkgdown.r-lib.org/">pkgdown</a> makes this real easy!</p>
</li>
</ul>
<p>To evaluate all these aspects, you (still) need human reviewers! That&rsquo;s why I value so much initiatives such as <a href="https://ropensci.org/">rOpenSci</a>, their members <a href="https://ropensci.org/blog/2017/09/01/nf-softwarereview/">review packages</a>, advertise the packages they&rsquo;ve reviewed, write tutorials and <a href="https://ropensci.org/blog/"> blog on what they are doing</a>. Our experience was awesome, we had very positive feed back, very clever suggestions that made <a href="https://github.com/ropensci/rcites">rcites</a> a better package. I would love to say more about it but guess what, the review process  in 100% transparent, so check out what really happened <code>=&gt;</code> <a href="https://github.com/ropensci/onboarding/issues/244"><img src="https://badges.ropensci.org/244_status.svg" alt="ROpenSci status"></a>. You may wonder whether your package is in the scope of rOpenSci? How to submit your package? Well, they are completing a book to answer all this question, <a href="https://ropensci.github.io/dev_guide/">check it out</a>! If your package is not in rOpenSci book, you have other options such as <a href="https://joss.theoj.org">The Journal of Open Source Software (JOSS)</a> or <a href="https://www.jstatsoft.org/index">Journal of statistical software</a>. Note that <a href="https://ropensci.org/blog/2017/11/29/review-collaboration-mee/">rOpenSci has Software Review Collaboration with Methods in Ecology and Evolution</a> and with JOSS. So in our case, it meant that <a href="https://joss.theoj.org/papers/ad23e358f208568c4913cf5fb99a030d">our JOSS paper</a> was accepted after the review completed by rOpenSci.</p>
<p>There are <a href="https://cran.r-project.org/web/packages/">thousands of packages on the CRAN</a>, I personally
think that it is worth sending packages of good quality (again quality means that the package does what it was meant to do and does it well). After this experience, I&rsquo;ll always do my best to get reviews of the code before sending the package to the CRAN. People are sometimes wondering how to <a href="https://simplystatistics.org/2015/11/06/how-i-decide-when-to-trust-an-r-package/">trust an R package</a>, getting packages peer-reviewed is definitively a good solution.
For now on, my personal approach with R packages will be:</p>
<ol>
<li>Development of GitHub (or similar);</li>
<li>Review;</li>
<li>Development until package accepted;</li>
<li>Submit first version to CRAN;</li>
<li>Advertise <i class="fa fa-twitter" aria-hidden="true"></i>, blog, etc.</li>
<li>Regular life cycle: new features/ fixing bugs / new release on CRAN when ready / keep advertising.</li>
</ol>
<h2 id="curated-list-of-resources-mentioned-in-the-post">Curated list of resources mentioned in the post</h2>
<h3 id="packages">Packages</h3>
<ul>
<li><a href="https://github.com/r-lib/devtools/issues">devtools</a></li>
<li><a href="https://github.com/r-lib/usethis">usethis</a></li>
<li><a href="https://github.com/r-lib/pkgdown">pkgdown</a></li>
<li><a href="https://github.com/MangoTheCat/goodpractice">goodpractice</a></li>
</ul>
<h3 id="builders">Builders</h3>
<ul>
<li><a href="https://r-hub.github.io/rhub/">r-hub</a> see <a href="https://builder.r-hub.io/">https://builder.r-hub.io/</a></li>
<li><a href="https://win-builder.r-project.org/">win-builder</a></li>
</ul>
<h3 id="documentation">Documentation</h3>
<ul>
<li><a href="http://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/">&ldquo;Writing an R package from scratch&rdquo; by Hilary Parker</a> (that actually is the first thing I read on this topic)</li>
<li><a href="https://cran.r-project.org/doc/manuals/r-release/R-exts.html">Writing R extension, on the CRAN</a></li>
<li><a href="http://r-pkgs.had.co.nz/">R packages by Hadley Wickham</a></li>
<li><a href="https://rOpenSci.github.io/dev_guide/">rOpenSci Packages: Development, Maintenance, and Peer Review</a></li>
<li><a href="http://adv-r.had.co.nz/">Advanced R by Hadley Wickham</a></li>
<li><a href="https://csgillespie.github.io/efficientR/index.html">Efficient R programming by Colin Gillespie Robin Lovelace</a></li>
<li><a href="https://git-scm.com/book/en/v2">Pro Git</a></li>
</ul>
<h3 id="journals">Journals</h3>
<ul>
<li><a href="https://journal.r-project.org/">R Journal</a></li>
<li><a href="https://joss.theoj.org/">The Journal of Open Source Software (JOSS)</a></li>
<li><a href="https://besjournals.onlinelibrary.wiley.com/journal/2041210x">Methods in Ecology and Evolution (MEE)</a>, <a href="https://rOpenSci.org/blog/2017/11/29/review-collaboration-mee/">it partnered up with rOpenSci</a></li>
</ul>
<h3 id="misc">Misc</h3>
<ul>
<li><a href="https://resources.rstudio.com/rstudio-conf-2018/you-can-make-a-package-in-20-minutes-jim-hester">You can make a package in 20 minutes</a></li>
</ul>
<br>
<h4 id="thats-all-folks">That&rsquo;s all folks!</h4>
</description>
    </item>
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
		
    
  </channel>
</rss>